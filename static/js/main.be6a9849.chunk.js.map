{"version":3,"sources":["redux/user/userSlice.js","redux/posts/postSlice.js","redux/user/userSaga.js","redux/posts/postSaga.js","redux/configureStore.js","components/auth/AuthCard.js","components/auth/AuthLinkCard.js","hooks/useInput.js","pages/Auth.js","components/common/DropDownMenu.js","components/layout/NavMenu.js","components/layout/AppLayout.js","hooks/useUploadImages.js","components/common/Avatar.js","components/profile/ProfileHead.js","pages/EditProfile.js","components/posts/PostCardContent.js","components/posts/CommentList.js","components/posts/Comment.js","components/posts/PostMenu.js","components/posts/PostCardHead.js","components/posts/Slider.js","components/posts/postCard.js","pages/Home.js","pages/Posting.js","components/profile/PostImg.js","components/profile/FollowList.js","components/profile/FollowListModal.js","pages/Profile.js","pages/SignUp.js","components/Router.js","index.js"],"names":["dummyUser","id","email","password","nickname","desc","avatar","Posts","Images","src","Comments","Followers","Followings","slice","createSlice","name","initialState","loginLoading","loginDone","loginError","logoutLoading","logoutDone","logoutError","signUpLoading","signUpDone","signUpError","editProfileLoading","editProfileDone","editProfileError","addFollowLoading","addFollowDone","addFollowError","removeFollowLoading","removeFollowDone","removeFollowError","currentUser","reducers","loginRequest","state","loginSuccess","payload","find","v","loginFail","error","console","log","logoutRequest","logoutSuccess","logoutFail","signUpRequest","signUpSuccess","addedUser","push","signUpFail","editProfileRequest","editProfileSuccess","editProfileFail","addFollowRequest","addFollowSuccess","userId","addFollowFail","removeFollowRequest","removeFollowSuccess","me","filter","removeFollowFail","addPostToMe","images","newId","unshift","removePostToMe","addCommentToMe","postId","post","length","removeCommentToMe","commentId","actions","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","removeCommentLoading","removeCommentDone","removeCommentError","addLikersLoading","addLikersDone","addLikersError","removeLikersLoading","removeLikersDone","removeLikersError","mainPosts","User","content","Likers","faker","findName","concat","Array","fill","map","i","image","lorem","paragraph","Math","ceil","random","sentence","addPostRequest","addPostSuccess","text","addPostFail","removePostRequest","removePostSuccess","removePostFail","addCommentRequest","addCommentSuccess","addCommentFail","removeCommentRequest","removeCommentSuccess","removeCommentFail","addLikersRequest","addLikersSuccess","addLikersFail","removeLikersRequest","removeLikersSuccess","removeLikersFail","editProfileToPost","forEach","login","logout","signUp","editProfile","addFollow","removeFollow","watchLogin","watchLogout","watchSignUp","watchEditProfile","watchAddFollow","watchRemoveFollow","userSaga","delay","put","takeLatest","all","fork","addPost","removePost","addComment","removeComment","addLikers","removeLikers","watchAddPost","watchremovePost","watchAddComment","watchRemoveComment","watchAddLikers","watchRemoveLikers","postSaga","Date","now","rootSaga","rootReducer","combineReducers","user","store","sagaMiddleware","createSagaMiddleware","configureStore","reducer","middleware","devTools","process","run","s","logo","styled","h1","smallText","span","AuthCard","children","cardStyle","useMemo","width","marginTop","padding","textAlign","Card","style","centered","AuthLinkCard","query","useInput","initialValue","useState","value","setValue","useCallback","e","target","Button","Auth","useSelector","dispatch","useDispatch","onChangeEmail","onChangePassword","setLoginError","onSubmit","userIndex","findIndex","checkPassword","Form","Input","icon","iconPosition","type","placeholder","onChange","autoFocus","size","color","loading","to","list","ul","DropDownMenu","top","NavMenu","onLogout","List","Item","Icon","onClick","Loader","active","inline","header","AppLayout","oepnMenu","setOpenMenu","prev","Header","as","floated","className","Image","useUploadImages","setImage","onFileChange","files","imageArr","prototype","call","file","reader","FileReader","onload","finishedEvent","result","currentTarget","readAsDataURL","imageInput","useRef","onImageUpload","current","click","Avatar","img","alt","height","Grid","Column","ProfileHead","columns","Row","verticalAlign","article","changeAvatar","a","EditProfile","history","useHistory","onChangeNickname","onChangeDesc","accept","hidden","ref","htmlFor","div","PostCardContent","split","match","date","remove","Content","CommentList","onRemove","getToday","year","getFullYear","month","getMonth","getDate","getTime","comment","Comment","comments","toggleComment","onToggleComment","newComment","setNewComment","open","setOpen","onChangeText","setText","useEffect","onToggle","transparent","PostMenu","follow","setFollow","onToggleFollow","PostCardHead","openMenu","onFollow","onToggleMenu","margin","container","next","slider","dots","Slider","LEN","currentSlider","setCurrentSlider","slideRef","prevSlide","nextSlide","moveSliderSize","transition","transform","dotStyle","background","card","btn","PostCard","setToggleComment","hearted","setHearted","onToggleHeart","bool","Home","imageUpload","Posting","multiple","TextArea","rows","PostImg","commentLen","backgroundPosition","backgroundSize","backgroundRepeat","ListHeader","FollowList","oepnConfirm","setOpenConfirm","onConfirm","onUnfollow","basic","Confirm","onCancel","Modal","FollowListModal","Follow","title","oepnFollower","setOpenFollower","onClose","onOpen","trigger","selection","profile","Profile","horizontal","Error","agree","SignUp","emailError","setEmailError","passwordCheck","onChangePasswordCheck","passwordError","setPasswordError","term","setTerm","termError","setTermError","onChangeTerm","checked","RouterApp","exact","path","component","posting","from","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.be6a9849.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const dummyUser = [\r\n  {\r\n    id: 1,\r\n    email: 'ss@ss.ss',\r\n    password: 'ssssss',\r\n    nickname: '비오',\r\n    desc: '',\r\n    avatar: '',\r\n    Posts: [\r\n      {\r\n        id: 1,\r\n        Images: [\r\n          {\r\n            id: 1,\r\n            src:\r\n              'https://postfiles.pstatic.net/MjAyMDEyMTNfNzkg/MDAxNjA3ODcwMjE4MzY2.LILZ384xZJf9RMgRQhEM_mIotC-eJXNMGmFCa4MOEn0g.Ee9zgxDFIP0RBmSb6RXQBcdQypVIvJW0PWzycYd8Irkg.JPEG.bohwajung/SE-318a6c4f-6f79-4053-9704-f1a9658d7468.jpg?type=w966',\r\n          },\r\n        ],\r\n        Comments: [\r\n          {\r\n            id: 1,\r\n          },\r\n          {\r\n            id: 2,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    Followers: [\r\n      { id: 2, nickname: '사과맛' },\r\n      { id: 3, nickname: 'black02' },\r\n    ],\r\n    Followings: [{ id: 2, nickname: '사과맛' }],\r\n  },\r\n];\r\n\r\nexport const initialState = {\r\n  loginLoading: false,\r\n  loginDone: false,\r\n  loginError: null,\r\n  logoutLoading: false,\r\n  logoutDone: false,\r\n  logoutError: null,\r\n  signUpLoading: false,\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  editProfileLoading: false,\r\n  editProfileDone: false,\r\n  editProfileError: null,\r\n  addFollowLoading: false,\r\n  addFollowDone: false,\r\n  addFollowError: null,\r\n  removeFollowLoading: false,\r\n  removeFollowDone: false,\r\n  removeFollowError: null,\r\n  currentUser: null,\r\n};\r\nconst slice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    loginRequest(state) {\r\n      state.loginLoading = true;\r\n      state.loginDone = false;\r\n      state.loginError = null;\r\n    },\r\n    loginSuccess(state, { payload: email }) {\r\n      state.loginLoading = false;\r\n      state.loginDone = true;\r\n      state.currentUser = dummyUser.find((v) => v.email === email);\r\n    },\r\n    loginFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.loginLoading = false;\r\n      state.loginError = error;\r\n    },\r\n    logoutRequest(state) {\r\n      state.logoutLoading = true;\r\n      state.logoutDone = false;\r\n      state.logoutError = null;\r\n    },\r\n    logoutSuccess(state) {\r\n      state.logoutLoading = false;\r\n      state.logoutDone = true;\r\n      state.currentUser = null;\r\n    },\r\n    logoutFail(state, { payload: error }) {\r\n      state.logoutLoading = false;\r\n      state.logoutError = error;\r\n    },\r\n    signUpRequest(state) {\r\n      state.signUpLoading = true;\r\n      state.signUpDone = false;\r\n      state.signUpError = null;\r\n    },\r\n    signUpSuccess(state, { payload }) {\r\n      const addedUser = { ...payload };\r\n      state.signUpLoading = false;\r\n      state.signUpDone = true;\r\n      state.currentUser = addedUser;\r\n      dummyUser.push(addedUser);\r\n    },\r\n    signUpFail(state, { payload: error }) {\r\n      state.signUpLoading = false;\r\n      state.signUpError = error;\r\n    },\r\n    editProfileRequest(state) {\r\n      state.editProfileLoading = true;\r\n      state.editProfileDone = false;\r\n      state.editProfileError = null;\r\n    },\r\n    editProfileSuccess(state, { payload: { src, nickname, desc } }) {\r\n      state.editProfileLoading = false;\r\n      state.editProfileDone = true;\r\n      state.currentUser.avatar = src;\r\n      state.currentUser.nickname = nickname;\r\n      state.currentUser.desc = desc;\r\n    },\r\n    editProfileFail(state, { payload: error }) {\r\n      state.editProfileLoading = false;\r\n      state.editProfileError = error;\r\n    },\r\n    addFollowRequest(state) {\r\n      state.addFollowLoading = true;\r\n      state.addFollowDone = false;\r\n      state.addFollowError = null;\r\n    },\r\n    addFollowSuccess(state, { payload: { userId, nickname } }) {\r\n      state.addFollowLoading = false;\r\n      state.addFollowDone = true;\r\n      state.currentUser.Followings.push({ id: userId, nickname });\r\n    },\r\n    addFollowFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.addFollowLoading = false;\r\n      state.addFollowError = error;\r\n    },\r\n    removeFollowRequest(state) {\r\n      state.removeFollowLoading = true;\r\n      state.removeFollowDone = false;\r\n      state.removeFollowError = null;\r\n    },\r\n    removeFollowSuccess(state, { payload: userId }) {\r\n      state.removeFollowLoading = false;\r\n      state.removeFollowDone = true;\r\n      const me = state.currentUser;\r\n      me.Followings = me.Followings.filter((v) => v.id !== userId);\r\n    },\r\n    removeFollowFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.removeFollowLoading = false;\r\n      state.removeFollowError = error;\r\n    },\r\n    addPostToMe(state, { payload: { images, newId } }) {\r\n      state.currentUser.Posts.unshift({\r\n        id: newId,\r\n        Images: { ...images },\r\n        Comments: [],\r\n      });\r\n    },\r\n    removePostToMe(state, { payload }) {\r\n      state.currentUser.Posts = state.currentUser.Posts.filter((v) => v.id !== payload);\r\n    },\r\n    addCommentToMe(state, { payload: { postId } }) {\r\n      const post = state.currentUser.Posts.find((v) => v.id === postId);\r\n      post.Comments.push({ id: post.Comments.length + 1 });\r\n    },\r\n    removeCommentToMe(state, { payload: { postId, commentId } }) {\r\n      const post = state.currentUser.Posts.find((v) => v.id === postId);\r\n      post.Comments = post.Comments.filter((v) => v.id !== commentId);\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\nexport const {\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginFail,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutFail,\r\n  signUpRequest,\r\n  signUpSuccess,\r\n  signUpFail,\r\n  editProfileRequest,\r\n  editProfileSuccess,\r\n  editProfileFail,\r\n  addFollowRequest,\r\n  addFollowSuccess,\r\n  addFollowFail,\r\n  removeFollowRequest,\r\n  removeFollowSuccess,\r\n  removeFollowFail,\r\n  addPostToMe,\r\n  removePostToMe,\r\n  addCommentToMe,\r\n  removeCommentToMe,\r\n} = slice.actions;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport faker from 'faker';\r\nimport { dummyUser } from 'redux/user/userSlice';\r\n\r\nexport const dummyPost = {\r\n  id: 1,\r\n  User: {\r\n    id: dummyUser[0].id,\r\n    nickname: dummyUser[0].nickname,\r\n    avatar: dummyUser[0].avatar,\r\n  },\r\n  Images: [\r\n    {\r\n      id: 1,\r\n      src:\r\n        'https://postfiles.pstatic.net/MjAyMDEyMTNfNzkg/MDAxNjA3ODcwMjE4MzY2.LILZ384xZJf9RMgRQhEM_mIotC-eJXNMGmFCa4MOEn0g.Ee9zgxDFIP0RBmSb6RXQBcdQypVIvJW0PWzycYd8Irkg.JPEG.bohwajung/SE-318a6c4f-6f79-4053-9704-f1a9658d7468.jpg?type=w966',\r\n    },\r\n    {\r\n      id: 2,\r\n      src:\r\n        'https://postfiles.pstatic.net/MjAyMDEyMTNfMjk3/MDAxNjA3ODcwMTkwNTI1.itfkAz6ePBWD8NsVPJQL81J_AYZle-c0E3bA8K3nG54g.8saLG2yEVcR9TRelQQOx2IwRU7WKmGfsI_7fWZDn7NMg.JPEG.bohwajung/SE-057136c4-5ecb-48e6-aa08-d73caf672076.jpg?type=w966',\r\n    },\r\n  ],\r\n  content: '첫 번째 포스트 #히히',\r\n  Likers: [\r\n    {\r\n      id: 0,\r\n      nickname: '더미유저',\r\n      avatar: null,\r\n    },\r\n  ],\r\n  Comments: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 2,\r\n        nickname: faker.name.findName(),\r\n      },\r\n      content: '😙😙 예쁘다!',\r\n    },\r\n    {\r\n      id: 2,\r\n      User: {\r\n        id: 3,\r\n        nickname: faker.name.findName(),\r\n      },\r\n      content: '우와 운치있어요!!',\r\n    },\r\n  ],\r\n};\r\n\r\nexport const initialState = {\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  removeCommentLoading: false,\r\n  removeCommentDone: false,\r\n  removeCommentError: null,\r\n  addLikersLoading: false,\r\n  addLikersDone: false,\r\n  addLikersError: null,\r\n  removeLikersLoading: false,\r\n  removeLikersDone: false,\r\n  removeLikersError: null,\r\n  mainPosts: [dummyPost],\r\n};\r\n\r\ninitialState.mainPosts = initialState.mainPosts.concat(\r\n  Array(10)\r\n    .fill()\r\n    .map((v, i) => ({\r\n      id: initialState.mainPosts.length + i + 1,\r\n      User: {\r\n        id: 10 + i,\r\n        nickname: faker.name.findName(),\r\n        avatar: '',\r\n      },\r\n      Images: [\r\n        {\r\n          id: 1,\r\n          src: faker.image.image(),\r\n        },\r\n      ],\r\n      content: faker.lorem.paragraph(),\r\n      Likers: [],\r\n      Comments: [\r\n        {\r\n          id: 1,\r\n          User: {\r\n            id: Math.ceil(Math.random() * 30) + 10,\r\n            nickname: faker.name.findName(),\r\n          },\r\n          content: faker.lorem.sentence(),\r\n        },\r\n        {\r\n          id: 2,\r\n          User: {\r\n            id: Math.ceil(Math.random() * 30) + 10,\r\n            nickname: faker.name.findName(),\r\n          },\r\n          content: faker.lorem.sentence(),\r\n        },\r\n      ],\r\n    })),\r\n);\r\n\r\nconst slice = createSlice({\r\n  name: 'post',\r\n  initialState,\r\n  reducers: {\r\n    addPostRequest(state) {\r\n      state.addPostLoading = true;\r\n      state.addPostDone = false;\r\n      state.addPostError = null;\r\n    },\r\n    addPostSuccess(state, { payload: { images, text, currentUser, newId } }) {\r\n      state.addPostLoading = false;\r\n      state.addPostDone = true;\r\n      state.mainPosts.unshift({\r\n        id: newId,\r\n        User: {\r\n          id: currentUser.id,\r\n          nickname: currentUser.nickname,\r\n          avatar: currentUser.avatar,\r\n        },\r\n        Images: [...images],\r\n        content: text,\r\n        Likers: [],\r\n        Comments: [],\r\n      });\r\n    },\r\n    addPostFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.addPostLoading = false;\r\n      state.addPostError = error;\r\n    },\r\n    removePostRequest(state) {\r\n      state.removePostLoading = true;\r\n      state.removePostDone = false;\r\n      state.removePostError = null;\r\n    },\r\n    removePostSuccess(state, { payload }) {\r\n      state.removePostLoading = false;\r\n      state.removePostDone = true;\r\n      state.mainPosts = state.mainPosts.filter((v) => v.id !== payload);\r\n    },\r\n    removePostFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.removePostLoading = false;\r\n      state.removePostError = error;\r\n    },\r\n    addCommentRequest(state) {\r\n      state.addCommentLoading = true;\r\n      state.addCommentDone = false;\r\n      state.addCommentError = null;\r\n    },\r\n    addCommentSuccess(state, { payload: { postId, currentUser, text } }) {\r\n      state.addCommentLoading = false;\r\n      state.addCommentDone = true;\r\n      const post = state.mainPosts.find((v) => v.id === postId);\r\n      post.Comments.push({\r\n        id: post.Comments.length + 1,\r\n        User: {\r\n          id: currentUser.id,\r\n          nickname: currentUser.nickname,\r\n          avatar: currentUser.avatar,\r\n        },\r\n        content: text,\r\n      });\r\n    },\r\n    addCommentFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.addCommentLoading = false;\r\n      state.addCommentError = error;\r\n    },\r\n    removeCommentRequest(state) {\r\n      state.removeCommentLoading = true;\r\n      state.removeCommentDone = false;\r\n      state.removeCommentError = null;\r\n    },\r\n    removeCommentSuccess(state, { payload: { postId, commentId } }) {\r\n      state.removeCommentLoading = false;\r\n      state.removeCommentDone = true;\r\n      const post = state.mainPosts.find((v) => v.id === postId);\r\n      post.Comments = post.Comments.filter((v) => v.id !== commentId);\r\n    },\r\n    removeCommentFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.removeCommentLoading = false;\r\n      state.removeCommentError = error;\r\n    },\r\n    addLikersRequest(state) {\r\n      state.addLikersLoading = true;\r\n      state.addLikersDone = false;\r\n      state.addLikersError = null;\r\n    },\r\n    addLikersSuccess(state, { payload: { postId, currentUser } }) {\r\n      state.addLikersLoading = false;\r\n      state.addLikersDone = true;\r\n      const post = state.mainPosts.find((v) => v.id === postId);\r\n      post.Likers.push({\r\n        id: currentUser.id,\r\n        nickname: currentUser.nickname,\r\n        avatar: currentUser.avatar,\r\n      });\r\n    },\r\n    addLikersFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.addLikersLoading = false;\r\n      state.addLikersError = error;\r\n    },\r\n    removeLikersRequest(state) {\r\n      state.removeLikersLoading = true;\r\n      state.removeLikersDone = false;\r\n      state.removeLikersError = null;\r\n    },\r\n    removeLikersSuccess(state, { payload: { postId, currentUser } }) {\r\n      state.removeLikersLoading = false;\r\n      state.removeLikersDone = true;\r\n      const post = state.mainPosts.find((v) => v.id === postId);\r\n      post.Likers = post.Likers.filter((v) => v.id !== currentUser.id);\r\n    },\r\n    removeLikersFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.removeLikersLoading = false;\r\n      state.removeLikersError = error;\r\n    },\r\n    editProfileToPost(state, { payload: { userId, nickname, src } }) {\r\n      const posts = state.mainPosts.filter((v) => v.User.id === userId);\r\n      return posts.forEach((v) => (v.User.avatar = src) && (v.User.nickname = nickname));\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\nexport const {\r\n  addPostRequest,\r\n  addPostSuccess,\r\n  addPostFail,\r\n  removePostRequest,\r\n  removePostSuccess,\r\n  removePostFail,\r\n  addCommentRequest,\r\n  addCommentSuccess,\r\n  addCommentFail,\r\n  removeCommentRequest,\r\n  removeCommentSuccess,\r\n  removeCommentFail,\r\n  addLikersRequest,\r\n  addLikersSuccess,\r\n  addLikersFail,\r\n  removeLikersRequest,\r\n  removeLikersSuccess,\r\n  removeLikersFail,\r\n  editProfileToPost,\r\n} = slice.actions;\r\n","import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport { editProfileToPost } from 'redux/posts/postSlice';\r\nimport {\r\n  loginFail,\r\n  loginRequest,\r\n  loginSuccess,\r\n  logoutFail,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  signUpFail,\r\n  signUpRequest,\r\n  signUpSuccess,\r\n  editProfileRequest,\r\n  editProfileSuccess,\r\n  editProfileFail,\r\n  addFollowRequest,\r\n  addFollowSuccess,\r\n  addFollowFail,\r\n  removeFollowRequest,\r\n  removeFollowSuccess,\r\n  removeFollowFail,\r\n} from 'redux/user/userSlice';\r\n\r\n// function loginAPI(data){\r\n//   return axios.post('/user/login', data);\r\n// }\r\nfunction* login({ payload }) {\r\n  // const result = yield call(loginAPI, payload);\r\n  try {\r\n    yield delay(1000);\r\n    yield put(loginSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(loginFail(err));\r\n  }\r\n}\r\n\r\nfunction* logout() {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(logoutSuccess());\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(logoutFail(err));\r\n  }\r\n}\r\n\r\nfunction* signUp({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(signUpSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(signUpFail(err));\r\n  }\r\n}\r\n\r\nfunction* editProfile({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(editProfileSuccess(payload));\r\n    if (payload.src || payload.nickname) {\r\n      yield put(editProfileToPost(payload));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(editProfileFail(err));\r\n  }\r\n}\r\n\r\nfunction* addFollow({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(addFollowSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(addFollowFail(err));\r\n  }\r\n}\r\n\r\nfunction* removeFollow({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(removeFollowSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(removeFollowFail(err));\r\n  }\r\n}\r\n\r\nexport function* watchLogin() {\r\n  yield takeLatest(loginRequest, login);\r\n}\r\nexport function* watchLogout() {\r\n  yield takeLatest(logoutRequest, logout);\r\n}\r\nexport function* watchSignUp() {\r\n  yield takeLatest(signUpRequest, signUp);\r\n}\r\nexport function* watchEditProfile() {\r\n  yield takeLatest(editProfileRequest, editProfile);\r\n}\r\nexport function* watchAddFollow() {\r\n  yield takeLatest(addFollowRequest, addFollow);\r\n}\r\nexport function* watchRemoveFollow() {\r\n  yield takeLatest(removeFollowRequest, removeFollow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchLogout),\r\n    fork(watchSignUp),\r\n    fork(watchEditProfile),\r\n    fork(watchAddFollow),\r\n    fork(watchRemoveFollow),\r\n  ]);\r\n}\r\n","import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  addCommentFail,\r\n  addCommentRequest,\r\n  addCommentSuccess,\r\n  addLikersFail,\r\n  addLikersRequest,\r\n  addLikersSuccess,\r\n  addPostFail,\r\n  addPostRequest,\r\n  addPostSuccess,\r\n  removeCommentFail,\r\n  removeCommentRequest,\r\n  removeCommentSuccess,\r\n  removeLikersFail,\r\n  removeLikersRequest,\r\n  removeLikersSuccess,\r\n  removePostFail,\r\n  removePostRequest,\r\n  removePostSuccess,\r\n} from 'redux/posts/postSlice';\r\nimport {\r\n  addCommentToMe,\r\n  addPostToMe,\r\n  removeCommentToMe,\r\n  removePostToMe,\r\n} from 'redux/user/userSlice';\r\n\r\n// function addPostAPI(data){\r\n//   return axios.post('/post/add', data);\r\n// }\r\nfunction* addPost({ payload }) {\r\n  // const result = yield call(addPostAPI, payload);\r\n  try {\r\n    yield delay(1000);\r\n    const newId = Date.now();\r\n    yield put(addPostSuccess({ ...payload, newId }));\r\n    yield put(addPostToMe({ ...payload, newId }));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(addPostFail(err));\r\n  }\r\n}\r\n\r\nfunction* removePost({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(removePostSuccess(payload));\r\n    yield put(removePostToMe(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(removePostFail(err));\r\n  }\r\n}\r\n\r\nfunction* addComment({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(addCommentSuccess(payload));\r\n    yield put(addCommentToMe(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(addCommentFail(err));\r\n  }\r\n}\r\n\r\nfunction* removeComment({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(removeCommentSuccess(payload));\r\n    yield put(removeCommentToMe(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(removeCommentFail(err));\r\n  }\r\n}\r\n\r\nfunction* addLikers({ payload }) {\r\n  try {\r\n    yield put(addLikersSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(addLikersFail(err));\r\n  }\r\n}\r\n\r\nfunction* removeLikers({ payload }) {\r\n  try {\r\n    yield put(removeLikersSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(removeLikersFail(err));\r\n  }\r\n}\r\n\r\nexport function* watchAddPost() {\r\n  yield takeLatest(addPostRequest, addPost);\r\n}\r\nexport function* watchremovePost() {\r\n  yield takeLatest(removePostRequest, removePost);\r\n}\r\nexport function* watchAddComment() {\r\n  yield takeLatest(addCommentRequest, addComment);\r\n}\r\nexport function* watchRemoveComment() {\r\n  yield takeLatest(removeCommentRequest, removeComment);\r\n}\r\nexport function* watchAddLikers() {\r\n  yield takeLatest(addLikersRequest, addLikers);\r\n}\r\nexport function* watchRemoveLikers() {\r\n  yield takeLatest(removeLikersRequest, removeLikers);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchremovePost),\r\n    fork(watchAddComment),\r\n    fork(watchRemoveComment),\r\n    fork(watchAddLikers),\r\n    fork(watchRemoveLikers),\r\n  ]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { combineReducers } from 'redux';\r\nimport user from 'redux/user/userSlice';\r\nimport post from 'redux/posts/postSlice';\r\n\r\nimport { all } from 'redux-saga/effects';\r\nimport userSaga from 'redux/user/userSaga';\r\nimport postSaga from 'redux/posts/postSaga';\r\n\r\nconst rootReducer = combineReducers({ user, post });\r\n\r\nfunction* rootSaga() {\r\n  yield all([userSaga(), postSaga()]);\r\n}\r\n\r\nconst store = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [sagaMiddleware],\r\n    devTools: process.env.NODE_ENV === 'development',\r\n  });\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n};\r\n\r\nexport default store();\r\n","import React, { useMemo } from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthCard = ({ children }) => {\r\n  const cardStyle = useMemo(\r\n    () => ({ width: 348, marginTop: 50, padding: 30, textAlign: 'center' }),\r\n    [],\r\n  );\r\n  return (\r\n    <Card style={cardStyle} centered>\r\n      <s.logo>BiioGram</s.logo>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.logo = styled.h1`\r\n  margin-bottom: 30px;\r\n`;\r\ns.smallText = styled.span`\r\n  font-size: 0.75rem;\r\n`;\r\nAuthCard.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default AuthCard;\r\n","import React, { useMemo } from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthLinkCard = ({ query, children }) => {\r\n  const cardStyle = useMemo(() => ({ width: 348, padding: 15, textAlign: 'center' }), []);\r\n  return (\r\n    <Card style={cardStyle} centered>\r\n      <span>{query}</span>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nAuthLinkCard.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default AuthLinkCard;\r\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const handler = useCallback(\r\n    (e) => {\r\n      setValue(e.target.value);\r\n    },\r\n    [value],\r\n  );\r\n  return [value, handler, setValue];\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Input } from 'semantic-ui-react';\r\nimport AuthCard from 'components/auth/AuthCard';\r\nimport AuthLinkCard from 'components/auth/AuthLinkCard';\r\nimport { dummyUser, loginRequest } from 'redux/user/userSlice';\r\nimport { useInput } from 'hooks/useInput';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Auth = () => {\r\n  const { loginLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [loginError, setLoginError] = useState(false);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    const userIndex = dummyUser.findIndex((v) => v.email === email);\r\n    const checkPassword = dummyUser[userIndex]?.password === password;\r\n    userIndex !== -1 || setLoginError(true);\r\n    checkPassword || setLoginError(true);\r\n    userIndex !== -1 && checkPassword && dispatch(loginRequest(email));\r\n  }, [email, password]);\r\n\r\n  return (\r\n    <>\r\n      <AuthCard content=\"로그인\">\r\n        <Form onSubmit={onSubmit}>\r\n          <Input\r\n            icon=\"user\"\r\n            iconPosition=\"left\"\r\n            type=\"email\"\r\n            placeholder=\"email@gmail.com\"\r\n            onChange={onChangeEmail}\r\n            autoFocus\r\n            size=\"small\"\r\n          />\r\n          <Input\r\n            icon=\"lock\"\r\n            iconPosition=\"left\"\r\n            type=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            onChange={onChangePassword}\r\n            size=\"small\"\r\n          />\r\n          <div>\r\n            <s.Button size=\"small\" content=\"로그인\" color=\"teal\" loading={loginLoading} />\r\n          </div>\r\n        </Form>\r\n        {loginError && '이메일이나 비밀번호를 확인해주세요.'}\r\n      </AuthCard>\r\n      <AuthLinkCard query=\"계정이 없으신가요?\">\r\n        <Link to=\"/signUp\">가입하기</Link>\r\n      </AuthLinkCard>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Button = styled(Button)`\r\n  width: 100%;\r\n`;\r\nexport default Auth;\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DropDownMenu = ({ children, top }) => {\r\n  const style = useMemo(() => ({ top }), []);\r\n  return (\r\n    <s.list style={style}>\r\n      {/* List.Item이 하위항목으로 들어가야함 */}\r\n      {children}\r\n    </s.list>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.list = styled.ul`\r\n  width: 150px;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: 1px solid #eee;\r\n  background: white;\r\n  border-radius: 8px;\r\n  position: absolute;\r\n  right: 0;\r\n  z-index: 500;\r\n  box-shadow: -7px 7px 10px #00000013;\r\n  & .item {\r\n    padding: 15px 15px;\r\n    & i {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  & .item:hover {\r\n    cursor: pointer;\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\nDropDownMenu.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  top: PropTypes.string.isRequired,\r\n};\r\nexport default DropDownMenu;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Icon, List, Loader } from 'semantic-ui-react';\r\nimport { logoutRequest } from 'redux/user/userSlice';\r\nimport DropDownMenu from 'components/common/DropDownMenu';\r\n\r\nconst NavMenu = () => {\r\n  const { logoutLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = useCallback(() => dispatch(logoutRequest()), []);\r\n\r\n  return (\r\n    <DropDownMenu top=\"64px\">\r\n      <List.Item>\r\n        <NavLink to=\"/profile\">\r\n          <Icon name=\"user circle\" /> 프로필\r\n        </NavLink>\r\n      </List.Item>\r\n      <List.Item>\r\n        <NavLink to=\"/profile/edit\">\r\n          <Icon name=\"setting\" /> 프로필 설정\r\n        </NavLink>\r\n      </List.Item>\r\n      <List.Item onClick={onLogout}>\r\n        {logoutLoading ? <Loader active inline=\"centered\" /> : '로그아웃'}\r\n      </List.Item>\r\n    </DropDownMenu>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Header, Icon, Image } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport styled from 'styled-components';\r\nimport NavMenu from 'components/layout/NavMenu';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AppLayout = ({ children }) => {\r\n  const [oepnMenu, setOpenMenu] = useState(false);\r\n\r\n  const onClick = useCallback(() => {\r\n    setOpenMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <s.header>\r\n        <nav>\r\n          <Header as=\"h1\" floated=\"left\">\r\n            <NavLink to=\"/\">BiioGram</NavLink>\r\n          </Header>\r\n          <div className=\"menu\">\r\n            <NavLink to=\"/posting\">\r\n              <Icon name=\"plus\" size=\"large\" />\r\n            </NavLink>\r\n            <Image\r\n              src=\"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n              avatar\r\n              floated=\"right\"\r\n              onClick={onClick}\r\n            />\r\n          </div>\r\n        </nav>\r\n        {oepnMenu && <NavMenu />}\r\n      </s.header>\r\n      <section>{children}</section>\r\n      <footer>&copy; 2020 biio All rights reserved</footer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.header = styled.header`\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  & > nav {\r\n    width: 100%;\r\n    height: 34px;\r\n    & .menu {\r\n      float: right;\r\n      padding-top: 5px;\r\n      & i {\r\n        padding-top: 2px;\r\n      }\r\n      & img {\r\n        cursor: pointer;\r\n        float: right;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nAppLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default AppLayout;\r\n","import { useCallback, useRef, useState } from 'react';\r\n\r\nconst useUploadImages = () => {\r\n  const [images, setImage] = useState('');\r\n  const onFileChange = useCallback((e) => {\r\n    const { files } = e.target;\r\n    let imageArr = [];\r\n    Array.prototype.forEach.call(files, (file, i) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (finishedEvent) => {\r\n        const { result } = finishedEvent.currentTarget;\r\n        imageArr.push({ id: i, src: result });\r\n        setImage([...imageArr]);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }, []);\r\n\r\n  const imageInput = useRef();\r\n  const onImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  return [images, onFileChange, imageInput, onImageUpload];\r\n};\r\n\r\nexport default useUploadImages;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Avatar = ({ src, size }) => {\r\n  return (\r\n    <s.Avatar\r\n      src={src ? src : 'https://react.semantic-ui.com/images/wireframe/square-image.png'}\r\n      alt={src ? src : '프로필사진 없음'}\r\n      width={size}\r\n      height={size}\r\n    />\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Avatar = styled.img`\r\n  border-radius: 50%;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n`;\r\nAvatar.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  size: PropTypes.string.isRequired,\r\n};\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport Avatar from 'components/common/Avatar';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileHead = ({ children, avatar, nickname }) => {\r\n  return (\r\n    <>\r\n      <Grid columns={2}>\r\n        <Grid.Row verticalAlign=\"middle\">\r\n          {/* 프로필 상단 왼쪽 */}\r\n          <s.Avatar>\r\n            <Avatar src={avatar} size=\"150px\" />\r\n          </s.Avatar>\r\n\r\n          {/* 프로필 상단 오른쪽 */}\r\n          <Grid.Column>\r\n            <h1>{nickname}</h1>\r\n            {children}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Avatar = styled(Grid.Column)`\r\n  text-align: center;\r\n`;\r\nProfileHead.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  avatar: PropTypes.string,\r\n  nickname: PropTypes.isRequired,\r\n};\r\nexport default ProfileHead;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Input } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport AppLayout from 'components/layout/AppLayout';\r\nimport { editProfileRequest } from 'redux/user/userSlice';\r\nimport { useInput } from 'hooks/useInput';\r\nimport useUploadImages from 'hooks/useUploadImages';\r\nimport ProfileHead from 'components/profile/ProfileHead';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst EditProfile = () => {\r\n  const { currentUser, editProfileLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [images, onFileChange, imageInput, onImageUpload] = useUploadImages();\r\n  const [nickname, onChangeNickname] = useInput(currentUser.nickname);\r\n  const [desc, onChangeDesc] = useInput(currentUser.desc);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    const src = images[0]?.src;\r\n    const userId = currentUser.id;\r\n    dispatch(editProfileRequest({ src, nickname, desc, userId }));\r\n    history.push('/profile');\r\n  }, [images, nickname, desc]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <s.article>\r\n        <ProfileHead avatar={images[0]?.src || currentUser.avatar} nickname={nickname}>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            hidden\r\n            ref={imageInput}\r\n            onChange={onFileChange}\r\n          />\r\n          <div>\r\n            <p>{currentUser.email}</p>\r\n            <s.changeAvatar onClick={onImageUpload}>프로필 사진 바꾸기</s.changeAvatar>\r\n          </div>\r\n        </ProfileHead>\r\n        <s.Form onSubmit={onSubmit}>\r\n          <div>\r\n            <label htmlFor=\"nickname\">닉네임</label>\r\n            <Input\r\n              id=\"nickname\"\r\n              type=\"text\"\r\n              value={nickname}\r\n              onChange={onChangeNickname}\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"user-desc\">소개</label>\r\n            <Input\r\n              id=\"user-desc\"\r\n              type=\"text\"\r\n              value={desc}\r\n              onChange={onChangeDesc}\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <s.Button\r\n              type=\"submit\"\r\n              content=\"수정사항 저장하기\"\r\n              color=\"teal\"\r\n              loading={editProfileLoading}\r\n            />\r\n          </div>\r\n        </s.Form>\r\n      </s.article>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.article = styled.article`\r\n  padding: 10px;\r\n`;\r\ns.changeAvatar = styled.a`\r\n  cursor: pointer;\r\n`;\r\ns.Form = styled(Form)`\r\n  margin-top: 20px;\r\n  padding: 0 20px;\r\n  & > div {\r\n    margin-bottom: 10px;\r\n    & label {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\ns.Button = styled(Button)`\r\n  width: 100%;\r\n`;\r\nexport default EditProfile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostCardContent = ({ nickname, content }) => {\r\n  return (\r\n    <s.content>\r\n      <span>{nickname}</span>\r\n      {content.split(/(#[^\\s#]+)/g).map((v, i) => {\r\n        if (v.match(/(#[^\\s#]+)/)) {\r\n          return (\r\n            <Link to={`/hashtag/${v.slice(1)}`} key={i}>\r\n              {v}\r\n            </Link>\r\n          );\r\n        }\r\n        return v;\r\n      })}\r\n    </s.content>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.content = styled.div`\r\n  margin: 0 10px 10px;\r\n  & span {\r\n    font-weight: bold;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\nPostCardContent.propTypes = {\r\n  nickname: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n};\r\nexport default PostCardContent;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Image, List } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport { removeCommentRequest } from 'redux/posts/postSlice';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CommentList = ({ nickname, content, userId, commentId, postId }) => {\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const onRemove = useCallback(\r\n    () => dispatch(removeCommentRequest({ postId, commentId })),\r\n    [],\r\n  );\r\n  const getTime = () => {\r\n    const getToday = new Date();\r\n    const year = getToday.getFullYear();\r\n    const month = getToday.getMonth();\r\n    const date = getToday.getDate();\r\n    return `${year}년 ${month + 1}월 ${date}일`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List.Item>\r\n        <Image\r\n          src=\"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n          avatar\r\n        />\r\n        <List.Content>\r\n          <List.Header>\r\n            {nickname}\r\n            <s.date>{getTime()}</s.date>\r\n          </List.Header>\r\n          <p>{content}</p>\r\n        </List.Content>\r\n        {userId === currentUser.id && (\r\n          <s.remove floated=\"right\" onClick={onRemove}>\r\n            <List.Icon name=\"delete\" color=\"red\" />\r\n          </s.remove>\r\n        )}\r\n      </List.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.date = styled.span`\r\n  font-size: 0.9rem;\r\n  font-weight: lighter;\r\n  margin-left: 5px;\r\n  margin-bottom: 0;\r\n  color: #aaa;\r\n`;\r\ns.remove = styled(List.Content)`\r\n  cursor: pointer;\r\n`;\r\nCommentList.propTypes = {\r\n  nickname: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  userId: PropTypes.number.isRequired,\r\n  commentId: PropTypes.number.isRequired,\r\n  postId: PropTypes.number.isRequired,\r\n};\r\nexport default CommentList;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Form, Input, List } from 'semantic-ui-react';\r\nimport CommentList from 'components/posts/CommentList';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCommentRequest } from 'redux/posts/postSlice';\r\nimport { useInput } from 'hooks/useInput';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Comment = ({ postId, comments, toggleComment, onToggleComment }) => {\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [newComment, setNewComment] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [text, onChangeText, setText] = useInput('');\r\n\r\n  // 덧글아이콘(at PostCard)을 눌렀을 때 덧글창이 열리거나 닫힘\r\n  useEffect(() => {\r\n    setOpen(toggleComment);\r\n    setNewComment(null);\r\n  }, [toggleComment]);\r\n\r\n  const onToggle = useCallback(() => {\r\n    // 덧글아이콘(at PostCard)을 눌렀을 때 덧글창이 열리거나 닫힘\r\n    onToggleComment(!open);\r\n    // 덧글 닫기/모두보기 클릭시 토글\r\n    setOpen((prev) => !prev);\r\n    setNewComment(null);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addCommentRequest({ postId, currentUser, text }));\r\n    setNewComment(text);\r\n    setText('');\r\n  }, [text]);\r\n  return (\r\n    <s.comment>\r\n      <p onClick={onToggle}>\r\n        {open ? '덧글 닫기' : `${comments?.length}개의 덧글 모두 보기`}\r\n      </p>\r\n      {open && (\r\n        <List>\r\n          {comments.map((v) => (\r\n            <CommentList\r\n              key={v.id}\r\n              postId={postId}\r\n              commentId={v.id}\r\n              userId={v.User.id}\r\n              nickname={v.User.nickname}\r\n              content={v.content}\r\n            />\r\n          ))}\r\n        </List>\r\n      )}\r\n      {newComment && !open && (\r\n        <List>\r\n          <CommentList\r\n            postId={postId}\r\n            commentId={comments.length + 1}\r\n            userId={currentUser.id}\r\n            nickname={currentUser.nickname}\r\n            content={newComment}\r\n          />\r\n        </List>\r\n      )}\r\n      <Form onSubmit={onSubmit}>\r\n        <Input\r\n          transparent\r\n          placeholder=\"덧글을 입력하세요.\"\r\n          value={text}\r\n          onChange={onChangeText}\r\n        />\r\n      </Form>\r\n    </s.comment>\r\n  );\r\n};\r\nconst s = {};\r\ns.comment = styled.div`\r\n  padding: 0 10px;\r\n  & > p {\r\n    margin: 0;\r\n    color: gray;\r\n    cursor: pointer;\r\n    font-size: 0.95rem;\r\n  }\r\n  & > .list {\r\n    margin-top: 10px;\r\n  }\r\n  & .item {\r\n    margin-bottom: 5px;\r\n  }\r\n  & form {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\nComment.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      User: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        nickname: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    }),\r\n  ).isRequired,\r\n  toggleComment: PropTypes.bool.isRequired,\r\n  onToggleComment: PropTypes.func.isRequired,\r\n};\r\nexport default Comment;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { List, Loader } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport DropDownMenu from 'components/common/DropDownMenu';\r\nimport { removePostRequest } from 'redux/posts/postSlice';\r\nimport { addFollowRequest, removeFollowRequest } from 'redux/user/userSlice';\r\n\r\nconst PostMenu = ({ userId, postId, nickname }) => {\r\n  const {\r\n    addFollowLoading,\r\n    removeFollowLoading,\r\n    currentUser: { id, Followings },\r\n  } = useSelector((state) => state.user);\r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const [follow, setFollow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const isFollowed = Followings.find((v) => v.id === userId);\r\n    isFollowed && setFollow(true);\r\n  }, [follow]);\r\n\r\n  const onRemove = useCallback(() => {\r\n    dispatch(removePostRequest(postId));\r\n  }, []);\r\n\r\n  const onToggleFollow = useCallback(() => {\r\n    dispatch(\r\n      follow ? removeFollowRequest(userId) : addFollowRequest({ userId, nickname }),\r\n    );\r\n    setFollow((prev) => !prev);\r\n  }, [follow]);\r\n\r\n  return (\r\n    <DropDownMenu top=\"30px\">\r\n      {userId === id ? (\r\n        <List.Item onClick={onRemove}>\r\n          {removePostLoading ? <Loader active inline=\"centered\" /> : '삭제'}\r\n        </List.Item>\r\n      ) : (\r\n        <>\r\n          <List.Item onClick={onToggleFollow}>\r\n            {addFollowLoading || removeFollowLoading ? (\r\n              <Loader active inline=\"centered\" />\r\n            ) : follow ? (\r\n              '언팔로우'\r\n            ) : (\r\n              '팔로우'\r\n            )}\r\n          </List.Item>\r\n        </>\r\n      )}\r\n    </DropDownMenu>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.div = styled.div`\r\n  text-align: center;\r\n  & i {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nPostMenu.propTypes = {\r\n  userId: PropTypes.number.isRequired,\r\n  postId: PropTypes.number.isRequired,\r\n  nickname: PropTypes.string.isRequired,\r\n};\r\nexport default PostMenu;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid, Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport { addFollowRequest } from 'redux/user/userSlice';\r\nimport Avatar from 'components/common/Avatar';\r\nimport PostMenu from 'components/posts/PostMenu';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PostCardHead = ({ userId, nickname, avatar, postId }) => {\r\n  const { id, Followings } = useSelector((state) => state.user.currentUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const onFollow = useCallback(\r\n    () => dispatch(addFollowRequest({ userId, nickname })),\r\n    [],\r\n  );\r\n  const onToggleMenu = useCallback(() => {\r\n    setOpenMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  const style = useMemo(() => ({ margin: '0' }), []);\r\n  return (\r\n    <s.Grid style={style}>\r\n      <Grid.Row verticalAlign=\"middle\">\r\n        <Grid.Column width={10}>\r\n          <Avatar\r\n            src={\r\n              avatar\r\n                ? avatar\r\n                : 'https://react.semantic-ui.com/images/wireframe/square-image.png'\r\n            }\r\n            size=\"31px\"\r\n          />\r\n          <span>\r\n            <b>{nickname}</b>\r\n            {userId === id ||\r\n              (!Followings.find((v) => v.id === userId) && (\r\n                <a onClick={onFollow}>팔로우하기</a>\r\n              ))}\r\n          </span>\r\n        </Grid.Column>\r\n        <Grid.Column floated=\"right\" width={2}>\r\n          <Icon name=\"ellipsis vertical\" onClick={onToggleMenu} />\r\n          {openMenu && <PostMenu userId={userId} postId={postId} nickname={nickname} />}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </s.Grid>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Grid = styled(Grid)`\r\n  width: 100%;\r\n  & span {\r\n    position: relative;\r\n    top: -8px;\r\n    left: 10px;\r\n    & a {\r\n      cursor: pointer;\r\n      margin-left: 5px;\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n  & i {\r\n    float: right;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nPostCardHead.propTypes = {\r\n  userId: PropTypes.number.isRequired,\r\n  nickname: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  postId: PropTypes.number.isRequired,\r\n};\r\nexport default PostCardHead;\r\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Slider = ({ Images }) => {\r\n  const LEN = Images.length;\r\n  const [currentSlider, setCurrentSlider] = useState(1);\r\n  const slideRef = useRef();\r\n\r\n  const prevSlide = useCallback(\r\n    () => (currentSlider === 1 ? null : setCurrentSlider((prev) => prev - 1)),\r\n    [currentSlider],\r\n  );\r\n  const nextSlide = useCallback(() => {\r\n    currentSlider >= LEN ? null : setCurrentSlider((prev) => prev + 1);\r\n  }, [currentSlider]);\r\n\r\n  useEffect(() => {\r\n    const moveSliderSize = ((currentSlider - 1) * 100) / LEN;\r\n    slideRef.current.style.transition = 'all 0.5s ease-in-out';\r\n    slideRef.current.style.transform = `translateX(-${moveSliderSize}%)`;\r\n    slideRef.current.style.width = `${LEN * 100}%`;\r\n  }, [currentSlider]);\r\n\r\n  const dotStyle = useMemo(() => ({ background: '#999' }), []);\r\n  return (\r\n    <s.container>\r\n      {currentSlider !== 1 && (\r\n        <Icon name=\"arrow alternate circle left outline\" onClick={prevSlide} />\r\n      )}\r\n      {currentSlider !== LEN && (\r\n        <s.next name=\"arrow alternate circle right outline\" onClick={nextSlide} />\r\n      )}\r\n      <s.slider ref={slideRef}>\r\n        {Images.map((v, i) => (\r\n          <div key={i}>\r\n            <img src={v.src} alt={v.src} />\r\n          </div>\r\n        ))}\r\n      </s.slider>\r\n      {LEN > 1 && (\r\n        <s.dots>\r\n          {Images.map((v, i) => (\r\n            <span key={i} style={i + 1 === currentSlider ? dotStyle : null} />\r\n          ))}\r\n        </s.dots>\r\n      )}\r\n    </s.container>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.container = styled.div`\r\n  width: 100%;\r\n  max-height: 640px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  overflow: hidden;\r\n  & i {\r\n    padding: 50px 0;\r\n    position: absolute;\r\n    top: calc(50% - 58px);\r\n    z-index: 600;\r\n    margin: 0 0.25rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\ns.next = styled(Icon)`\r\n  right: 0;\r\n`;\r\ns.slider = styled.div`\r\n  display: flex;\r\n  & div {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    & img {\r\n      max-width: 100%;\r\n      max-height: 640px;\r\n    }\r\n  }\r\n`;\r\ns.dots = styled.div`\r\n  text-align: center;\r\n  & span {\r\n    display: inline-block;\r\n    padding: 4px;\r\n    border-radius: 50%;\r\n    background: #eee;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nSlider.propTypes = {\r\n  Images: PropTypes.array.isRequired,\r\n};\r\nexport default Slider;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport PostCardContent from 'components/posts/PostCardContent';\r\nimport Comment from 'components/posts/Comment';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addLikersRequest, removeLikersRequest } from 'redux/posts/postSlice';\r\nimport PostCardHead from 'components/posts/PostCardHead';\r\nimport Slider from './Slider';\r\n\r\nconst PostCard = ({ user, content, Images, comments, postId, Likers }) => {\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const [toggleComment, setToggleComment] = useState(false);\r\n  const [hearted, setHearted] = useState(false);\r\n\r\n  const onToggleHeart = useCallback(() => {\r\n    dispatch(\r\n      hearted\r\n        ? removeLikersRequest({ postId, currentUser })\r\n        : addLikersRequest({ postId, currentUser }),\r\n    );\r\n    setHearted((prev) => !prev);\r\n  }, [hearted]);\r\n\r\n  return (\r\n    <s.card>\r\n      {/* 포스트 헤더 */}\r\n      <PostCardHead\r\n        userId={user.id}\r\n        nickname={user.nickname}\r\n        avatar={user.avatar}\r\n        postId={postId}\r\n      />\r\n\r\n      {/* 포스트 이미지 */}\r\n      <Slider Images={Images} />\r\n\r\n      {/* 좋아요, 덧글 아이콘 및 좋아요 수 */}\r\n      <s.btn>\r\n        <Icon\r\n          name={hearted ? 'heart' : 'heart outline'}\r\n          size=\"large\"\r\n          color={hearted ? 'red' : 'black'}\r\n          onClick={onToggleHeart}\r\n        />\r\n        <Icon\r\n          name=\"comment outline\"\r\n          size=\"large\"\r\n          onClick={() => setToggleComment((prev) => !prev)}\r\n        />\r\n        <p>좋아요 {Likers?.length || 0}개</p>\r\n      </s.btn>\r\n\r\n      {/* 포스트 내용 */}\r\n      <PostCardContent nickname={user.nickname} content={content} />\r\n\r\n      {/* 덧글 */}\r\n      <Comment\r\n        postId={postId}\r\n        comments={comments}\r\n        toggleComment={toggleComment}\r\n        onToggleComment={(bool) => setToggleComment(bool)}\r\n      />\r\n    </s.card>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.card = styled.article`\r\n  max-width: 640px;\r\n  border: 1px solid #eee;\r\n  margin: 0 auto 20px;\r\n  padding: 0 0 10px;\r\n`;\r\ns.btn = styled.div`\r\n  margin: 10px;\r\n  & i {\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n  & p {\r\n    margin-top: 5px;\r\n  }\r\n`;\r\nPostCard.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    nickname: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n  }).isRequired,\r\n  postId: PropTypes.number.isRequired,\r\n  Images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      src: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  Likers: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      nickname: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      User: PropTypes.shape({\r\n        nickname: PropTypes.string.isRequired,\r\n        avatar: PropTypes.string,\r\n      }).isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default PostCard;\r\n","import PostCard from 'components/posts/postCard';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AppLayout from 'components/layout/AppLayout';\r\n\r\nconst Home = () => {\r\n  const { mainPosts } = useSelector((state) => state.post);\r\n\r\n  return (\r\n    <>\r\n      <AppLayout>\r\n        {mainPosts.map((v) => (\r\n          <PostCard\r\n            key={v.id}\r\n            user={v.User}\r\n            content={v.content}\r\n            Images={v.Images}\r\n            comments={v.Comments}\r\n            postId={v.id}\r\n            Likers={v.Likers}\r\n          />\r\n        ))}\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Icon, TextArea } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport AppLayout from 'components/layout/AppLayout';\r\nimport { addPostRequest } from 'redux/posts/postSlice';\r\nimport { useInput } from 'hooks/useInput';\r\nimport useUploadImages from 'hooks/useUploadImages';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Posting = () => {\r\n  const { addPostLoading, addPostDone } = useSelector((state) => state.post);\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [images, onFileChange, imageInput, onImageUpload] = useUploadImages();\r\n  const [text, onChangeText, setText] = useInput('');\r\n\r\n  useEffect(() => {\r\n    addPostDone && setText('');\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addPostRequest({ images, text, currentUser }));\r\n    history.push('/');\r\n  }, [text]);\r\n\r\n  return (\r\n    <>\r\n      <AppLayout>\r\n        <s.div>\r\n          <Form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              hidden\r\n              ref={imageInput}\r\n              onChange={onFileChange}\r\n            />\r\n            <s.imageUpload onClick={onImageUpload}>\r\n              {images ? (\r\n                images.map((v, i) => <img src={v.src} alt={v.src} key={i} />)\r\n              ) : (\r\n                <div>\r\n                  <Icon name=\"plus\" size=\"huge\" />\r\n                  <p>사진을 추가하세요.</p>\r\n                </div>\r\n              )}\r\n            </s.imageUpload>\r\n            <TextArea rows=\"5\" placeholder=\"포스트 작성\" onChange={onChangeText} />\r\n            <s.Button\r\n              color=\"teal\"\r\n              type=\"submit\"\r\n              content=\"작성하기\"\r\n              loading={addPostLoading}\r\n            />\r\n          </Form>\r\n        </s.div>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.div = styled.div`\r\n  max-width: 640px;\r\n  margin: 0 auto;\r\n`;\r\ns.imageUpload = styled.div`\r\n  width: 100%;\r\n  border: 1px solid #eee;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  & img {\r\n    width: 100%;\r\n  }\r\n  & div {\r\n    color: #999;\r\n    padding: 40px;\r\n  }\r\n`;\r\ns.Button = styled(Button)`\r\n  width: 100%;\r\n`;\r\nexport default Posting;\r\n","import React, { useMemo } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PostImg = ({ src, commentLen, postId }) => {\r\n  const { mainPosts } = useSelector((state) => state.post);\r\n  const style = useMemo(\r\n    () => ({\r\n      background: `url(${src})`,\r\n      backgroundPosition: 'center',\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n    }),\r\n    [],\r\n  );\r\n  return (\r\n    <s.img style={style}>\r\n      <s.container>\r\n        <div>\r\n          <div>\r\n            <span>\r\n              <Icon name=\"heart outline\" />\r\n              {mainPosts.find((v) => v.id === postId).Likers.length}\r\n            </span>\r\n            <span>\r\n              <Icon name=\"comment outline\" />\r\n              {commentLen}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </s.container>\r\n    </s.img>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.img = styled.div`\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: calc(100vw / 3 - 32px);\r\n  max-height: calc(800px / 3 - 32px);\r\n  text-align: center;\r\n  & :hover {\r\n    & div {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\ns.container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  & > div {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #00000033;\r\n    opacity: 0;\r\n    & > div {\r\n      position: relative;\r\n      top: 50%;\r\n      transform: translate(0, -50%);\r\n      color: #fff;\r\n      opacity: 0;\r\n      & span:first-child {\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\nPostImg.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  commentLen: PropTypes.number.isRequired,\r\n};\r\nexport default PostImg;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Confirm, List } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addFollowRequest, removeFollowRequest } from 'redux/user/userSlice';\r\n\r\nconst FollowList = ({ nickname, userId }) => {\r\n  const {\r\n    currentUser: { Followings },\r\n  } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const [oepnConfirm, setOpenConfirm] = useState(false);\r\n  const onConfirm = useCallback(() => setOpenConfirm(true), []);\r\n  const onFollow = useCallback(\r\n    () => dispatch(addFollowRequest({ userId, nickname })),\r\n    [],\r\n  );\r\n  const onUnfollow = useCallback(() => dispatch(removeFollowRequest(userId)), []);\r\n  const style = useMemo(() => ({ padding: '4px 8px' }));\r\n  return (\r\n    <>\r\n      <List.Item>\r\n        <List.Content verticalAlign=\"middle\">\r\n          <s.ListHeader>{nickname}</s.ListHeader>\r\n          {Followings.find((v) => v.id === userId) ? (\r\n            <Button\r\n              color=\"teal\"\r\n              floated=\"right\"\r\n              size=\"tiny\"\r\n              style={style}\r\n              onClick={onConfirm}\r\n            >\r\n              팔로우\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              basic\r\n              color=\"teal\"\r\n              floated=\"right\"\r\n              size=\"tiny\"\r\n              style={style}\r\n              onClick={onFollow}\r\n            >\r\n              팔로우하기\r\n            </Button>\r\n          )}\r\n          <Confirm\r\n            open={oepnConfirm}\r\n            content=\"팔로우를 취소 하시겠습니까?\"\r\n            onCancel={() => setOpenConfirm(false)}\r\n            onConfirm={() => {\r\n              onUnfollow();\r\n              setOpenConfirm(false);\r\n            }}\r\n          />\r\n        </List.Content>\r\n      </List.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.ListHeader = styled(List.Header)`\r\n  float: left;\r\n`;\r\nFollowList.propTypes = {\r\n  nickname: PropTypes.string.isRequired,\r\n  userId: PropTypes.number.isRequired,\r\n};\r\nexport default FollowList;\r\n","import React, { useMemo, useState } from 'react';\r\nimport { List, Modal } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport FollowList from 'components/profile/FollowList';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FollowListModal = ({ Follow, title }) => {\r\n  const [oepnFollower, setOpenFollower] = useState(false);\r\n\r\n  const style = useMemo(() => ({ width: '300px' }), []);\r\n  return (\r\n    <s.Modal\r\n      style={style}\r\n      onClose={() => setOpenFollower(false)}\r\n      onOpen={() => setOpenFollower(true)}\r\n      open={oepnFollower}\r\n      trigger={\r\n        <p>\r\n          {title} <span>{Follow.length}</span>\r\n        </p>\r\n      }\r\n    >\r\n      <h3>{title}</h3>\r\n      <List selection verticalAlign=\"middle\">\r\n        {Follow.map((v, i) => (\r\n          <FollowList key={i} nickname={v.nickname} userId={v.id} />\r\n        ))}\r\n      </List>\r\n    </s.Modal>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Modal = styled(Modal)`\r\n  padding: 5px 0;\r\n  max-height: 80vh;\r\n  overflow-y: scroll;\r\n  & h3 {\r\n    margin-left: 10px;\r\n    padding-top: 5px;\r\n  }\r\n`;\r\n\r\nFollowListModal.propTypes = {\r\n  Follow: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      nickname: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default FollowListModal;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, List } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport AppLayout from 'components/layout/AppLayout';\r\nimport PostImg from 'components/profile/PostImg';\r\nimport FollowListModal from 'components/profile/FollowListModal';\r\nimport ProfileHead from 'components/profile/ProfileHead';\r\n\r\nconst Profile = () => {\r\n  const { nickname, Posts, Followers, Followings, desc, avatar } = useSelector(\r\n    (state) => state.user.currentUser,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppLayout>\r\n        <s.profile>\r\n          <ProfileHead avatar={avatar} nickname={nickname}>\r\n            {/* 프로필 상단 오른쪽 */}\r\n            <s.List horizontal>\r\n              <List.Item>\r\n                게시글 <span>{Posts.length}</span>\r\n              </List.Item>\r\n              <List.Item>\r\n                <FollowListModal Follow={Followers} title=\"팔로워\" />\r\n              </List.Item>\r\n              <List.Item>\r\n                <FollowListModal Follow={Followings} title=\"팔로우\" />\r\n              </List.Item>\r\n            </s.List>\r\n            <p>{desc}</p>\r\n          </ProfileHead>\r\n\r\n          {/* 내가 쓴 게시글 보기 */}\r\n          <s.article>\r\n            <Grid columns={3}>\r\n              <Grid.Row>\r\n                {Posts.map((v, i) => (\r\n                  <Grid.Column key={i}>\r\n                    <PostImg\r\n                      src={v.Images[0].src}\r\n                      commentLen={v.Comments.length}\r\n                      postId={v.id}\r\n                    />\r\n                  </Grid.Column>\r\n                ))}\r\n              </Grid.Row>\r\n            </Grid>\r\n          </s.article>\r\n        </s.profile>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\nconst s = {};\r\ns.profile = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\ns.List = styled(List)`\r\n  & .item {\r\n    cursor: pointer;\r\n  }\r\n  & .item:first-child {\r\n    cursor: auto;\r\n  }\r\n  & span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\ns.article = styled.article`\r\n  min-height: calc(100vh - 74px - 190px - 65px);\r\n  margin-top: 20px;\r\n`;\r\nexport default Profile;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Input } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport AuthCard from 'components/auth/AuthCard';\r\nimport AuthLinkCard from 'components/auth/AuthLinkCard';\r\nimport { dummyUser, signUpRequest } from 'redux/user/userSlice';\r\nimport { useInput } from 'hooks/useInput';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst SignUp = () => {\r\n  const { currentUser, signUpLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [passwordCheck, onChangePasswordCheck] = useInput('');\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [term, setTerm] = useState(false);\r\n  const [termError, setTermError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    currentUser && history.push('/');\r\n  }, [currentUser]);\r\n\r\n  const onChangeTerm = useCallback((e) => {\r\n    setTerm(e.target.checked);\r\n    setTermError(false);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    const exUser = dummyUser.find((v) => v.email === email);\r\n    if (exUser) {\r\n      return setEmailError(true);\r\n    } else {\r\n      setEmailError(false);\r\n    }\r\n    if (password !== passwordCheck) {\r\n      return setPasswordError(true);\r\n    } else {\r\n      setPasswordError(false);\r\n    }\r\n    if (!term) {\r\n      return setTermError(true);\r\n    } else {\r\n      setTermError(false);\r\n    }\r\n    dispatch(signUpRequest({ email, nickname, password }));\r\n  }, [email, password, passwordCheck, term]);\r\n\r\n  return (\r\n    <>\r\n      <AuthCard content=\"가입하기\">\r\n        <h4>이메일로 가입하기</h4>\r\n        <Form onSubmit={onSubmit}>\r\n          <Input type=\"email\" placeholder={'이메일'} onChange={onChangeEmail} autoFocus />\r\n          {emailError && <s.Error>이미 사용중인 이메일입니다.</s.Error>}\r\n          <Input\r\n            type=\"text\"\r\n            placeholder={'사용자이름'}\r\n            onChange={onChangeNickname}\r\n            size=\"small\"\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder={'비밀번호'}\r\n            onChange={onChangePassword}\r\n            error={passwordError}\r\n            size=\"small\"\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder={'비밀번호 확인'}\r\n            onChange={onChangePasswordCheck}\r\n            error={passwordError}\r\n            size=\"small\"\r\n          />\r\n          {passwordError && <s.Error>비밀번호가 일치하지 않습니다.</s.Error>}\r\n          <s.agree>\r\n            <input type=\"checkbox\" onChange={onChangeTerm} /> <a>약관</a>에 동의하십니까?\r\n            {termError && <s.Error>약관에 동의하지 않으셨습니다.</s.Error>}\r\n          </s.agree>\r\n          <div>\r\n            <s.Button\r\n              size=\"small\"\r\n              type=\"submit\"\r\n              content=\"가입하기\"\r\n              color=\"teal\"\r\n              loading={signUpLoading}\r\n            />\r\n          </div>\r\n        </Form>\r\n      </AuthCard>\r\n      <AuthLinkCard query=\"계정이 있으신가요?\">\r\n        <Link to=\"/auth\">로그인하기</Link>\r\n      </AuthLinkCard>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Error = styled.span`\r\n  color: red;\r\n`;\r\ns.agree = styled.div`\r\n  text-align: left;\r\n  font-size: 0.9rem;\r\n  & input {\r\n    margin: 3px 3px 0 5px;\r\n  }\r\n`;\r\ns.Button = styled(Button)`\r\n  width: 100%;\r\n`;\r\nexport default SignUp;\r\n","import Auth from 'pages/Auth';\r\nimport EditProfile from 'pages/EditProfile';\r\nimport Home from 'pages/Home';\r\nimport posting from 'pages/Posting';\r\nimport Profile from 'pages/Profile';\r\nimport SignUp from 'pages/SignUp';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { HashRouter as Router, Redirect, Route } from 'react-router-dom';\r\n\r\nfunction RouterApp() {\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  return (\r\n    <>\r\n      <Router>\r\n        {currentUser ? (\r\n          <>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/profile/edit\" component={EditProfile} />\r\n            <Route path=\"/posting\" component={posting} />\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route path=\"/auth\" component={Auth} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Redirect from=\"*\" to=\"/auth\" />\r\n          </>\r\n        )}\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RouterApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from 'redux/configureStore';\nimport RouterApp from 'components/Router';\n\nReactDOM.render(\n  <Provider store={store}>\n    <RouterApp />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}