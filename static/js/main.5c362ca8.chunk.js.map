{"version":3,"sources":["redux/user/userSlice.js","redux/post/postSlice.js","redux/user/userSaga.js","redux/post/postSaga.js","redux/configureStore.js","components/auth/AuthCard.js","components/auth/AuthLinkCard.js","hooks/useInput.js","pages/Auth.js","components/common/DropDownMenu.js","components/layout/NavMenu.js","components/layout/AppLayout.js","hooks/useUploadImages.js","components/common/Avatar.js","components/profile/ProfileHead.js","pages/EditProfile.js","components/posts/PostCardContent.js","components/posts/CommentList.js","components/posts/Comment.js","components/posts/PostMenu.js","components/posts/PostCardHead.js","components/posts/Slider.js","components/common/UserList.js","components/common/ListModal.js","components/posts/postCard.js","pages/Home.js","components/posts/PostForm.js","pages/CreatePost.js","pages/UpdatePost.js","components/profile/PostImg.js","pages/Profile.js","pages/SignUp.js","components/Router.js","index.js"],"names":["dummyUser","id","email","password","nickname","desc","avatar","Posts","Images","src","Comments","Likers","Followers","Followings","initialState","loginLoading","loginDone","loginError","logoutLoading","logoutDone","logoutError","signUpLoading","signUpDone","signUpError","editProfileLoading","editProfileDone","editProfileError","addFollowLoading","addFollowDone","addFollowError","removeFollowLoading","removeFollowDone","removeFollowError","currentUser","slice","createSlice","name","reducers","loginRequest","state","loginSuccess","payload","find","v","loginFail","error","console","log","logoutRequest","logoutSuccess","logoutFail","signUpRequest","signUpSuccess","addedUser","push","signUpFail","editProfileRequest","editProfileSuccess","editProfileFail","addFollowRequest","addFollowSuccess","userId","addFollowFail","removeFollowRequest","removeFollowSuccess","me","filter","removeFollowFail","addPostToMe","images","newId","unshift","updatePostToMe","postId","removePostToMe","addCommentToMe","post","length","removeCommentToMe","commentId","actions","addPostLoading","addPostDone","addPostError","updatePostLoading","updatePostDone","updatePostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","removeCommentLoading","removeCommentDone","removeCommentError","addLikerLoading","addLikerDone","addLikerError","removeLikerLoading","removeLikerDone","removeLikerError","mainPosts","User","content","faker","findName","singlePost","concat","Array","fill","map","i","image","lorem","paragraph","Math","ceil","random","sentence","updatePost","findPost","addPostRequest","addPostSuccess","text","Liker","addPostFail","updatePostRequest","updatePostSuccess","updatePostFail","removePostRequest","removePostSuccess","removePostFail","addCommentRequest","addCommentSuccess","addCommentFail","removeCommentRequest","removeCommentSuccess","removeCommentFail","addLikerRequest","addLikerSuccess","addLikerFail","removeLikerRequest","removeLikerSuccess","removeLikerFail","editProfileToPost","forEach","login","logout","signUp","editProfile","addFollow","removeFollow","watchLogin","watchLogout","watchSignUp","watchEditProfile","watchAddFollow","watchRemoveFollow","userSaga","delay","put","takeLatest","all","fork","addPost","removePost","addComment","removeComment","addLiker","removeLiker","watchAddPost","watchUpdatePost","watchremovePost","watchAddComment","watchRemoveComment","watchAddLiker","watchRemoveLiker","postSaga","Date","now","rootSaga","rootReducer","combineReducers","user","store","sagaMiddleware","createSagaMiddleware","configureStore","reducer","middleware","devTools","process","run","s","logo","styled","h1","smallText","span","AuthCard","children","cardStyle","useMemo","width","marginTop","padding","textAlign","Card","style","centered","AuthLinkCard","query","useInput","initialValue","useState","value","setValue","useCallback","e","target","Button","Auth","useSelector","dispatch","useDispatch","onChangeEmail","onChangePassword","setLoginError","onSubmit","userIndex","findIndex","checkPassword","Form","Input","icon","iconPosition","type","placeholder","onChange","autoFocus","size","color","loading","to","list","ul","DropDownMenu","top","NavMenu","onLogout","List","Item","Icon","onClick","Loader","active","inline","header","AppLayout","oepnMenu","setOpenMenu","prev","Header","as","floated","className","Image","useUploadImages","setImage","onFileChange","files","imageArr","prototype","call","file","reader","FileReader","onload","finishedEvent","result","currentTarget","readAsDataURL","imageInput","useRef","onImageUpload","current","click","Avatar","img","alt","height","Grid","Column","ProfileHead","edit","columns","Row","verticalAlign","article","changeAvatar","a","EditProfile","history","useHistory","onChangeNickname","onChangeDesc","accept","hidden","ref","htmlFor","div","PostCardContent","split","match","date","remove","Content","CommentList","onRemove","getToday","year","getFullYear","month","getMonth","getDate","getTime","comment","Comment","comments","toggleComment","onToggleComment","newComment","setNewComment","open","setOpen","onChangeText","setText","useEffect","onToggle","transparent","PostMenu","follow","setFollow","onUpdate","onToggleFollow","PostCardHead","openMenu","onFollow","onToggleMenu","margin","container","slider","dots","Slider","LEN","currentSlider","setCurrentSlider","slideRef","prevSlide","nextSlide","moveSliderSize","transition","transform","dotStyle","background","ListHeader","UserList","oepnConfirm","setOpenConfirm","onConfirm","onUnfollow","basic","Confirm","onCancel","Modal","ListModal","title","oepnList","setOpenList","onClose","onOpen","trigger","selection","card","btn","PostCard","setToggleComment","hearted","setHearted","onToggleHeart","bool","Home","imageUpload","PostForm","multiple","TextArea","rows","CreatePost","UpdatePost","PostImg","commentsLen","backgroundPosition","backgroundSize","backgroundRepeat","profile","Profile","horizontal","Error","agree","SignUp","emailError","setEmailError","passwordCheck","onChangePasswordCheck","passwordError","setPasswordError","term","setTerm","termError","setTermError","onChangeTerm","checked","RouterApp","exact","path","component","from","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.5c362ca8.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const dummyUser = [\r\n  {\r\n    id: 1,\r\n    email: 'ss@ss.ss',\r\n    password: 'ssssss',\r\n    nickname: '비오',\r\n    desc: '',\r\n    avatar: '',\r\n    Posts: [\r\n      {\r\n        id: 1,\r\n        Images: [\r\n          {\r\n            id: 1,\r\n            src:\r\n              'https://firebasestorage.googleapis.com/v0/b/haggendazs.appspot.com/o/BiioGram%2F_12285646.JPG?alt=media&token=ecad8e06-3d29-4e6e-a169-f582bc25ea66',\r\n          },\r\n        ],\r\n        Comments: [\r\n          {\r\n            id: 1,\r\n          },\r\n          {\r\n            id: 2,\r\n          },\r\n        ],\r\n        Likers: [\r\n          {\r\n            id: 2,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    Followers: [\r\n      { id: 2, nickname: '사과맛' },\r\n      { id: 3, nickname: 'black02' },\r\n    ],\r\n    Followings: [{ id: 2, nickname: '사과맛' }],\r\n  },\r\n];\r\n\r\nexport const initialState = {\r\n  loginLoading: false,\r\n  loginDone: false,\r\n  loginError: null,\r\n  logoutLoading: false,\r\n  logoutDone: false,\r\n  logoutError: null,\r\n  signUpLoading: false,\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  editProfileLoading: false,\r\n  editProfileDone: false,\r\n  editProfileError: null,\r\n  addFollowLoading: false,\r\n  addFollowDone: false,\r\n  addFollowError: null,\r\n  removeFollowLoading: false,\r\n  removeFollowDone: false,\r\n  removeFollowError: null,\r\n  currentUser: dummyUser[0],\r\n};\r\nconst slice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    loginRequest(state) {\r\n      state.loginLoading = true;\r\n      state.loginDone = false;\r\n      state.loginError = null;\r\n    },\r\n    loginSuccess(state, { payload: email }) {\r\n      state.loginLoading = false;\r\n      state.loginDone = true;\r\n      state.currentUser = dummyUser.find((v) => v.email === email);\r\n    },\r\n    loginFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.loginLoading = false;\r\n      state.loginError = error;\r\n    },\r\n    logoutRequest(state) {\r\n      state.logoutLoading = true;\r\n      state.logoutDone = false;\r\n      state.logoutError = null;\r\n    },\r\n    logoutSuccess(state) {\r\n      state.logoutLoading = false;\r\n      state.logoutDone = true;\r\n      state.currentUser = null;\r\n    },\r\n    logoutFail(state, { payload: error }) {\r\n      state.logoutLoading = false;\r\n      state.logoutError = error;\r\n    },\r\n    signUpRequest(state) {\r\n      state.signUpLoading = true;\r\n      state.signUpDone = false;\r\n      state.signUpError = null;\r\n    },\r\n    signUpSuccess(state, { payload }) {\r\n      const addedUser = { ...payload };\r\n      state.signUpLoading = false;\r\n      state.signUpDone = true;\r\n      state.currentUser = addedUser;\r\n      dummyUser.push(addedUser);\r\n    },\r\n    signUpFail(state, { payload: error }) {\r\n      state.signUpLoading = false;\r\n      state.signUpError = error;\r\n    },\r\n    editProfileRequest(state) {\r\n      state.editProfileLoading = true;\r\n      state.editProfileDone = false;\r\n      state.editProfileError = null;\r\n    },\r\n    editProfileSuccess(state, { payload: { src, nickname, desc } }) {\r\n      state.editProfileLoading = false;\r\n      state.editProfileDone = true;\r\n      state.currentUser.avatar = src;\r\n      state.currentUser.nickname = nickname;\r\n      state.currentUser.desc = desc;\r\n    },\r\n    editProfileFail(state, { payload: error }) {\r\n      state.editProfileLoading = false;\r\n      state.editProfileError = error;\r\n    },\r\n    addFollowRequest(state) {\r\n      state.addFollowLoading = true;\r\n      state.addFollowDone = false;\r\n      state.addFollowError = null;\r\n    },\r\n    addFollowSuccess(state, { payload: { userId, nickname } }) {\r\n      state.addFollowLoading = false;\r\n      state.addFollowDone = true;\r\n      state.currentUser.Followings.push({ id: userId, nickname });\r\n    },\r\n    addFollowFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.addFollowLoading = false;\r\n      state.addFollowError = error;\r\n    },\r\n    removeFollowRequest(state) {\r\n      state.removeFollowLoading = true;\r\n      state.removeFollowDone = false;\r\n      state.removeFollowError = null;\r\n    },\r\n    removeFollowSuccess(state, { payload: userId }) {\r\n      state.removeFollowLoading = false;\r\n      state.removeFollowDone = true;\r\n      const me = state.currentUser;\r\n      me.Followings = me.Followings.filter((v) => v.id !== userId);\r\n    },\r\n    removeFollowFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.removeFollowLoading = false;\r\n      state.removeFollowError = error;\r\n    },\r\n    addPostToMe(state, { payload: { images, newId } }) {\r\n      state.currentUser.Posts.unshift({\r\n        id: newId,\r\n        Images: { ...images },\r\n        Comments: [],\r\n        Likers: [],\r\n      });\r\n    },\r\n    updatePostToMe(state, { payload: { images, postId } }) {\r\n      const post = state.currentUser.Posts.find((v) => v.id === postId);\r\n      post.Images = [...images];\r\n    },\r\n    removePostToMe(state, { payload }) {\r\n      state.currentUser.Posts = state.currentUser.Posts.filter((v) => v.id !== payload);\r\n    },\r\n    addCommentToMe(state, { payload: { postId } }) {\r\n      const post = state.currentUser.Posts.find((v) => v.id === postId);\r\n      post.Comments.push({ id: post.Comments.length + 1 });\r\n    },\r\n    removeCommentToMe(state, { payload: { postId, commentId } }) {\r\n      const post = state.currentUser.Posts.find((v) => v.id === postId);\r\n      post.Comments = post.Comments.filter((v) => v.id !== commentId);\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\nexport const {\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginFail,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutFail,\r\n  signUpRequest,\r\n  signUpSuccess,\r\n  signUpFail,\r\n  editProfileRequest,\r\n  editProfileSuccess,\r\n  editProfileFail,\r\n  addFollowRequest,\r\n  addFollowSuccess,\r\n  addFollowFail,\r\n  removeFollowRequest,\r\n  removeFollowSuccess,\r\n  removeFollowFail,\r\n  addPostToMe,\r\n  removePostToMe,\r\n  addCommentToMe,\r\n  removeCommentToMe,\r\n} = slice.actions;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport faker from 'faker';\r\nimport { dummyUser } from 'redux/user/userSlice';\r\n\r\nexport const dummyPost = {\r\n  id: 1,\r\n  User: {\r\n    id: dummyUser[0].id,\r\n    nickname: dummyUser[0].nickname,\r\n    avatar: dummyUser[0].avatar,\r\n  },\r\n  Images: [\r\n    {\r\n      id: 1,\r\n      src:\r\n        'https://firebasestorage.googleapis.com/v0/b/haggendazs.appspot.com/o/BiioGram%2F_12285646.JPG?alt=media&token=ecad8e06-3d29-4e6e-a169-f582bc25ea66',\r\n    },\r\n    {\r\n      id: 2,\r\n      src:\r\n        'https://firebasestorage.googleapis.com/v0/b/haggendazs.appspot.com/o/BiioGram%2F_12285635.JPG?alt=media&token=740ef7a8-e636-49d0-baf8-8266ffb4ea5e',\r\n    },\r\n  ],\r\n  content: '첫 번째 포스트 #히히',\r\n  Likers: [\r\n    {\r\n      id: 2,\r\n      nickname: '사과맛',\r\n      avatar: null,\r\n    },\r\n  ],\r\n  Comments: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 2,\r\n        nickname: faker.name.findName(),\r\n      },\r\n      content: '😙😙 예쁘다!',\r\n    },\r\n    {\r\n      id: 2,\r\n      User: {\r\n        id: 3,\r\n        nickname: faker.name.findName(),\r\n      },\r\n      content: '우와 운치있어요!!',\r\n    },\r\n  ],\r\n};\r\n\r\nexport const initialState = {\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  updatePostLoading: false,\r\n  updatePostDone: false,\r\n  updatePostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  removeCommentLoading: false,\r\n  removeCommentDone: false,\r\n  removeCommentError: null,\r\n  addLikerLoading: false,\r\n  addLikerDone: false,\r\n  addLikerError: null,\r\n  removeLikerLoading: false,\r\n  removeLikerDone: false,\r\n  removeLikerError: null,\r\n  mainPosts: [dummyPost],\r\n  singlePost: null,\r\n};\r\n\r\ninitialState.mainPosts = initialState.mainPosts.concat(\r\n  Array(10)\r\n    .fill()\r\n    .map((v, i) => ({\r\n      id: initialState.mainPosts.length + i + 1,\r\n      User: {\r\n        id: 10 + i,\r\n        nickname: faker.name.findName(),\r\n        avatar: '',\r\n      },\r\n      Images: [\r\n        {\r\n          id: 1,\r\n          src: faker.image.image(),\r\n        },\r\n      ],\r\n      content: faker.lorem.paragraph(),\r\n      Likers: [],\r\n      Comments: [\r\n        {\r\n          id: 1,\r\n          User: {\r\n            id: Math.ceil(Math.random() * 30) + 10,\r\n            nickname: faker.name.findName(),\r\n          },\r\n          content: faker.lorem.sentence(),\r\n        },\r\n        {\r\n          id: 2,\r\n          User: {\r\n            id: Math.ceil(Math.random() * 30) + 10,\r\n            nickname: faker.name.findName(),\r\n          },\r\n          content: faker.lorem.sentence(),\r\n        },\r\n      ],\r\n    })),\r\n);\r\n\r\nconst slice = createSlice({\r\n  name: 'post',\r\n  initialState,\r\n  reducers: {\r\n    updatePost(state, { payload: postId }) {\r\n      const findPost = state.mainPosts.find((v) => v.id === postId);\r\n      state.singlePost = findPost;\r\n    },\r\n    addPostRequest(state) {\r\n      state.addPostLoading = true;\r\n      state.addPostDone = false;\r\n      state.addPostError = null;\r\n    },\r\n    addPostSuccess(state, { payload: { images, text, currentUser, newId } }) {\r\n      state.addPostLoading = false;\r\n      state.addPostDone = true;\r\n      state.mainPosts.unshift({\r\n        id: newId,\r\n        User: {\r\n          id: currentUser.id,\r\n          nickname: currentUser.nickname,\r\n          avatar: currentUser.avatar,\r\n        },\r\n        Images: [...images],\r\n        content: text,\r\n        Liker: [],\r\n        Comments: [],\r\n      });\r\n    },\r\n    addPostFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.addPostLoading = false;\r\n      state.addPostError = error;\r\n    },\r\n    updatePostRequest(state) {\r\n      state.updatePostLoading = true;\r\n      state.updatePostDone = false;\r\n      state.updatePostError = null;\r\n    },\r\n    updatePostSuccess(state, { payload: { images, text } }) {\r\n      const updatePost = state.mainPosts.find((v) => v.id === state.singlePost.id);\r\n      state.updatePostLoading = false;\r\n      state.updatePostDone = true;\r\n      updatePost.Images = [...images];\r\n      updatePost.content = text;\r\n      state.singlePost = null;\r\n    },\r\n    updatePostFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.updatePostLoading = false;\r\n      state.updatePostError = error;\r\n    },\r\n    removePostRequest(state) {\r\n      state.removePostLoading = true;\r\n      state.removePostDone = false;\r\n      state.removePostError = null;\r\n    },\r\n    removePostSuccess(state, { payload }) {\r\n      state.removePostLoading = false;\r\n      state.removePostDone = true;\r\n      state.mainPosts = state.mainPosts.filter((v) => v.id !== payload);\r\n    },\r\n    removePostFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.removePostLoading = false;\r\n      state.removePostError = error;\r\n    },\r\n    addCommentRequest(state) {\r\n      state.addCommentLoading = true;\r\n      state.addCommentDone = false;\r\n      state.addCommentError = null;\r\n    },\r\n    addCommentSuccess(state, { payload: { postId, currentUser, text } }) {\r\n      state.addCommentLoading = false;\r\n      state.addCommentDone = true;\r\n      const post = state.mainPosts.find((v) => v.id === postId);\r\n      post.Comments.push({\r\n        id: post.Comments.length + 1,\r\n        User: {\r\n          id: currentUser.id,\r\n          nickname: currentUser.nickname,\r\n          avatar: currentUser.avatar,\r\n        },\r\n        content: text,\r\n      });\r\n    },\r\n    addCommentFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.addCommentLoading = false;\r\n      state.addCommentError = error;\r\n    },\r\n    removeCommentRequest(state) {\r\n      state.removeCommentLoading = true;\r\n      state.removeCommentDone = false;\r\n      state.removeCommentError = null;\r\n    },\r\n    removeCommentSuccess(state, { payload: { postId, commentId } }) {\r\n      state.removeCommentLoading = false;\r\n      state.removeCommentDone = true;\r\n      const post = state.mainPosts.find((v) => v.id === postId);\r\n      post.Comments = post.Comments.filter((v) => v.id !== commentId);\r\n    },\r\n    removeCommentFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.removeCommentLoading = false;\r\n      state.removeCommentError = error;\r\n    },\r\n    addLikerRequest(state) {\r\n      state.addLikerLoading = true;\r\n      state.addLikerDone = false;\r\n      state.addLikerError = null;\r\n    },\r\n    addLikerSuccess(state, { payload: { postId, currentUser } }) {\r\n      state.addLikerLoading = false;\r\n      state.addLikerDone = true;\r\n      const post = state.mainPosts.find((v) => v.id === postId);\r\n      post.Likers.push({\r\n        id: currentUser.id,\r\n        nickname: currentUser.nickname,\r\n        avatar: currentUser.avatar,\r\n      });\r\n    },\r\n    addLikerFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.addLikerLoading = false;\r\n      state.addLikerError = error;\r\n    },\r\n    removeLikerRequest(state) {\r\n      state.removeLikerLoading = true;\r\n      state.removeLikerDone = false;\r\n      state.removeLikerError = null;\r\n    },\r\n    removeLikerSuccess(state, { payload: { postId, currentUser } }) {\r\n      state.removeLikerLoading = false;\r\n      state.removeLikerDone = true;\r\n      const post = state.mainPosts.find((v) => v.id === postId);\r\n      post.Likers = post.Likers.filter((v) => v.id !== currentUser.id);\r\n    },\r\n    removeLikerFail(state, { payload: error }) {\r\n      console.log(error);\r\n      state.removeLikerLoading = false;\r\n      state.removeLikerError = error;\r\n    },\r\n    editProfileToPost(state, { payload: { userId, nickname, src } }) {\r\n      const posts = state.mainPosts.filter((v) => v.User.id === userId);\r\n      return posts.forEach((v) => (v.User.avatar = src) && (v.User.nickname = nickname));\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\nexport const {\r\n  updatePost,\r\n  addPostRequest,\r\n  addPostSuccess,\r\n  addPostFail,\r\n  updatePostRequest,\r\n  updatePostSuccess,\r\n  updatePostFail,\r\n  removePostRequest,\r\n  removePostSuccess,\r\n  removePostFail,\r\n  addCommentRequest,\r\n  addCommentSuccess,\r\n  addCommentFail,\r\n  removeCommentRequest,\r\n  removeCommentSuccess,\r\n  removeCommentFail,\r\n  addLikerRequest,\r\n  addLikerSuccess,\r\n  addLikerFail,\r\n  removeLikerRequest,\r\n  removeLikerSuccess,\r\n  removeLikerFail,\r\n  editProfileToPost,\r\n} = slice.actions;\r\n","import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport { editProfileToPost } from 'redux/post/postSlice';\r\nimport {\r\n  loginFail,\r\n  loginRequest,\r\n  loginSuccess,\r\n  logoutFail,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  signUpFail,\r\n  signUpRequest,\r\n  signUpSuccess,\r\n  editProfileRequest,\r\n  editProfileSuccess,\r\n  editProfileFail,\r\n  addFollowRequest,\r\n  addFollowSuccess,\r\n  addFollowFail,\r\n  removeFollowRequest,\r\n  removeFollowSuccess,\r\n  removeFollowFail,\r\n} from 'redux/user/userSlice';\r\n\r\n// function loginAPI(data){\r\n//   return axios.post('/user/login', data);\r\n// }\r\nfunction* login({ payload }) {\r\n  // const result = yield call(loginAPI, payload);\r\n  try {\r\n    yield delay(1000);\r\n    yield put(loginSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(loginFail(err));\r\n  }\r\n}\r\n\r\nfunction* logout() {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(logoutSuccess());\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(logoutFail(err));\r\n  }\r\n}\r\n\r\nfunction* signUp({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(signUpSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(signUpFail(err));\r\n  }\r\n}\r\n\r\nfunction* editProfile({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(editProfileSuccess(payload));\r\n    if (payload.src || payload.nickname) {\r\n      yield put(editProfileToPost(payload));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(editProfileFail(err));\r\n  }\r\n}\r\n\r\nfunction* addFollow({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(addFollowSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(addFollowFail(err));\r\n  }\r\n}\r\n\r\nfunction* removeFollow({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(removeFollowSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(removeFollowFail(err));\r\n  }\r\n}\r\n\r\nexport function* watchLogin() {\r\n  yield takeLatest(loginRequest, login);\r\n}\r\nexport function* watchLogout() {\r\n  yield takeLatest(logoutRequest, logout);\r\n}\r\nexport function* watchSignUp() {\r\n  yield takeLatest(signUpRequest, signUp);\r\n}\r\nexport function* watchEditProfile() {\r\n  yield takeLatest(editProfileRequest, editProfile);\r\n}\r\nexport function* watchAddFollow() {\r\n  yield takeLatest(addFollowRequest, addFollow);\r\n}\r\nexport function* watchRemoveFollow() {\r\n  yield takeLatest(removeFollowRequest, removeFollow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchLogout),\r\n    fork(watchSignUp),\r\n    fork(watchEditProfile),\r\n    fork(watchAddFollow),\r\n    fork(watchRemoveFollow),\r\n  ]);\r\n}\r\n","import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  addCommentFail,\r\n  addCommentRequest,\r\n  addCommentSuccess,\r\n  addLikerFail,\r\n  addLikerRequest,\r\n  addLikerSuccess,\r\n  addPostFail,\r\n  addPostRequest,\r\n  addPostSuccess,\r\n  removeCommentFail,\r\n  removeCommentRequest,\r\n  removeCommentSuccess,\r\n  removeLikerFail,\r\n  removeLikerRequest,\r\n  removeLikerSuccess,\r\n  removePostFail,\r\n  removePostRequest,\r\n  removePostSuccess,\r\n  updatePostFail,\r\n  updatePostRequest,\r\n  updatePostSuccess,\r\n} from 'redux/post/postSlice';\r\nimport {\r\n  addCommentToMe,\r\n  addPostToMe,\r\n  removeCommentToMe,\r\n  removePostToMe,\r\n} from 'redux/user/userSlice';\r\n\r\n// function addPostAPI(data){\r\n//   return axios.post('/post/add', data);\r\n// }\r\nfunction* addPost({ payload }) {\r\n  // const result = yield call(addPostAPI, payload);\r\n  try {\r\n    yield delay(1000);\r\n    const newId = Date.now();\r\n    yield put(addPostSuccess({ ...payload, newId }));\r\n    yield put(addPostToMe({ ...payload, newId }));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(addPostFail(err));\r\n  }\r\n}\r\n\r\nfunction* updatePost({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(updatePostSuccess({ ...payload }));\r\n    yield put(addPostToMe({ ...payload }));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(updatePostFail(err));\r\n  }\r\n}\r\n\r\nfunction* removePost({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(removePostSuccess(payload));\r\n    yield put(removePostToMe(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(removePostFail(err));\r\n  }\r\n}\r\n\r\nfunction* addComment({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(addCommentSuccess(payload));\r\n    yield put(addCommentToMe(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(addCommentFail(err));\r\n  }\r\n}\r\n\r\nfunction* removeComment({ payload }) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put(removeCommentSuccess(payload));\r\n    yield put(removeCommentToMe(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(removeCommentFail(err));\r\n  }\r\n}\r\n\r\nfunction* addLiker({ payload }) {\r\n  try {\r\n    yield put(addLikerSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(addLikerFail(err));\r\n  }\r\n}\r\n\r\nfunction* removeLiker({ payload }) {\r\n  try {\r\n    yield put(removeLikerSuccess(payload));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(removeLikerFail(err));\r\n  }\r\n}\r\n\r\nexport function* watchAddPost() {\r\n  yield takeLatest(addPostRequest, addPost);\r\n}\r\nexport function* watchUpdatePost() {\r\n  yield takeLatest(updatePostRequest, updatePost);\r\n}\r\nexport function* watchremovePost() {\r\n  yield takeLatest(removePostRequest, removePost);\r\n}\r\nexport function* watchAddComment() {\r\n  yield takeLatest(addCommentRequest, addComment);\r\n}\r\nexport function* watchRemoveComment() {\r\n  yield takeLatest(removeCommentRequest, removeComment);\r\n}\r\nexport function* watchAddLiker() {\r\n  yield takeLatest(addLikerRequest, addLiker);\r\n}\r\nexport function* watchRemoveLiker() {\r\n  yield takeLatest(removeLikerRequest, removeLiker);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchUpdatePost),\r\n    fork(watchremovePost),\r\n    fork(watchAddComment),\r\n    fork(watchRemoveComment),\r\n    fork(watchAddLiker),\r\n    fork(watchRemoveLiker),\r\n  ]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { combineReducers } from 'redux';\r\nimport user from 'redux/user/userSlice';\r\nimport post from 'redux/post/postSlice';\r\n\r\nimport { all } from 'redux-saga/effects';\r\nimport userSaga from 'redux/user/userSaga';\r\nimport postSaga from 'redux/post/postSaga';\r\n\r\nconst rootReducer = combineReducers({ user, post });\r\n\r\nfunction* rootSaga() {\r\n  yield all([userSaga(), postSaga()]);\r\n}\r\n\r\nconst store = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [sagaMiddleware],\r\n    devTools: process.env.NODE_ENV === 'development',\r\n  });\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n};\r\n\r\nexport default store();\r\n","import React, { useMemo } from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthCard = ({ children }) => {\r\n  const cardStyle = useMemo(\r\n    () => ({ width: 348, marginTop: 50, padding: 30, textAlign: 'center' }),\r\n    [],\r\n  );\r\n  return (\r\n    <Card style={cardStyle} centered>\r\n      <s.logo>BiioGram</s.logo>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.logo = styled.h1`\r\n  margin-bottom: 30px;\r\n`;\r\ns.smallText = styled.span`\r\n  font-size: 0.75rem;\r\n`;\r\nAuthCard.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default AuthCard;\r\n","import React, { useMemo } from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthLinkCard = ({ query, children }) => {\r\n  const cardStyle = useMemo(() => ({ width: 348, padding: 15, textAlign: 'center' }), []);\r\n  return (\r\n    <Card style={cardStyle} centered>\r\n      <span>{query}</span>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nAuthLinkCard.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default AuthLinkCard;\r\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const handler = useCallback(\r\n    (e) => {\r\n      setValue(e.target.value);\r\n    },\r\n    [value],\r\n  );\r\n  return [value, handler, setValue];\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Input } from 'semantic-ui-react';\r\nimport AuthCard from 'components/auth/AuthCard';\r\nimport AuthLinkCard from 'components/auth/AuthLinkCard';\r\nimport { dummyUser, loginRequest } from 'redux/user/userSlice';\r\nimport { useInput } from 'hooks/useInput';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Auth = () => {\r\n  const { loginLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [loginError, setLoginError] = useState(false);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    const userIndex = dummyUser.findIndex((v) => v.email === email);\r\n    const checkPassword = dummyUser[userIndex]?.password === password;\r\n    userIndex !== -1 || setLoginError(true);\r\n    checkPassword || setLoginError(true);\r\n    userIndex !== -1 && checkPassword && dispatch(loginRequest(email));\r\n  }, [email, password]);\r\n\r\n  return (\r\n    <>\r\n      <AuthCard content=\"로그인\">\r\n        <Form onSubmit={onSubmit}>\r\n          <Input\r\n            icon=\"user\"\r\n            iconPosition=\"left\"\r\n            type=\"email\"\r\n            placeholder=\"email@gmail.com\"\r\n            onChange={onChangeEmail}\r\n            autoFocus\r\n            size=\"small\"\r\n          />\r\n          <Input\r\n            icon=\"lock\"\r\n            iconPosition=\"left\"\r\n            type=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            onChange={onChangePassword}\r\n            size=\"small\"\r\n          />\r\n          <div>\r\n            <s.Button size=\"small\" content=\"로그인\" color=\"teal\" loading={loginLoading} />\r\n          </div>\r\n        </Form>\r\n        {loginError && '이메일이나 비밀번호를 확인해주세요.'}\r\n      </AuthCard>\r\n      <AuthLinkCard query=\"계정이 없으신가요?\">\r\n        <Link to=\"/signUp\">가입하기</Link>\r\n      </AuthLinkCard>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Button = styled(Button)`\r\n  width: 100%;\r\n`;\r\nexport default Auth;\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DropDownMenu = ({ children, top }) => {\r\n  const style = useMemo(() => ({ top }), []);\r\n  return (\r\n    <s.list style={style}>\r\n      {/* List.Item이 하위항목으로 들어가야함 */}\r\n      {children}\r\n    </s.list>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.list = styled.ul`\r\n  width: 150px;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: 1px solid #eee;\r\n  background: white;\r\n  border-radius: 8px;\r\n  position: absolute;\r\n  right: 0;\r\n  z-index: 500;\r\n  box-shadow: -7px 7px 10px #00000013;\r\n  & .item {\r\n    padding: 15px 15px;\r\n    & i {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  & .item:hover {\r\n    cursor: pointer;\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\nDropDownMenu.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  top: PropTypes.string.isRequired,\r\n};\r\nexport default DropDownMenu;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Icon, List, Loader } from 'semantic-ui-react';\r\nimport { logoutRequest } from 'redux/user/userSlice';\r\nimport DropDownMenu from 'components/common/DropDownMenu';\r\n\r\nconst NavMenu = () => {\r\n  const { logoutLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = useCallback(() => dispatch(logoutRequest()), []);\r\n\r\n  return (\r\n    <DropDownMenu top=\"64px\">\r\n      <List.Item>\r\n        <NavLink to=\"/profile\">\r\n          <Icon name=\"user circle\" /> 프로필\r\n        </NavLink>\r\n      </List.Item>\r\n      <List.Item>\r\n        <NavLink to=\"/profile/edit\">\r\n          <Icon name=\"setting\" /> 프로필 설정\r\n        </NavLink>\r\n      </List.Item>\r\n      <List.Item onClick={onLogout}>\r\n        {logoutLoading ? <Loader active inline=\"centered\" /> : '로그아웃'}\r\n      </List.Item>\r\n    </DropDownMenu>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Header, Icon, Image } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport styled from 'styled-components';\r\nimport NavMenu from 'components/layout/NavMenu';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AppLayout = ({ children }) => {\r\n  const [oepnMenu, setOpenMenu] = useState(false);\r\n\r\n  const onClick = useCallback(() => {\r\n    setOpenMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <s.header>\r\n        <nav>\r\n          <Header as=\"h1\" floated=\"left\">\r\n            <NavLink to=\"/\">BiioGram</NavLink>\r\n          </Header>\r\n          <div className=\"menu\">\r\n            <NavLink to=\"/post/create\">\r\n              <Icon name=\"plus\" size=\"large\" />\r\n            </NavLink>\r\n            <Image\r\n              src=\"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n              avatar\r\n              floated=\"right\"\r\n              onClick={onClick}\r\n            />\r\n          </div>\r\n        </nav>\r\n        {oepnMenu && <NavMenu />}\r\n      </s.header>\r\n      <section>{children}</section>\r\n      <footer>&copy; 2020 biio All rights reserved</footer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.header = styled.header`\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  & > nav {\r\n    width: 100%;\r\n    height: 34px;\r\n    & .menu {\r\n      float: right;\r\n      padding-top: 5px;\r\n      & i {\r\n        padding-top: 2px;\r\n      }\r\n      & img {\r\n        cursor: pointer;\r\n        float: right;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nAppLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default AppLayout;\r\n","import { useCallback, useRef, useState } from 'react';\r\n\r\nconst useUploadImages = (initialState) => {\r\n  const [images, setImage] = useState(initialState);\r\n  const onFileChange = useCallback((e) => {\r\n    const { files } = e.target;\r\n    let imageArr = [];\r\n    Array.prototype.forEach.call(files, (file, i) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (finishedEvent) => {\r\n        const { result } = finishedEvent.currentTarget;\r\n        imageArr.push({ id: i, src: result });\r\n        setImage([...imageArr]);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }, []);\r\n\r\n  const imageInput = useRef();\r\n  const onImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  return [images, onFileChange, imageInput, onImageUpload];\r\n};\r\n\r\nexport default useUploadImages;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Avatar = ({ src, size }) => {\r\n  return (\r\n    <s.Avatar\r\n      src={src ? src : 'https://react.semantic-ui.com/images/wireframe/square-image.png'}\r\n      alt={src ? src : '프로필사진 없음'}\r\n      width={size}\r\n      height={size}\r\n    />\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Avatar = styled.img`\r\n  border-radius: 50%;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n`;\r\nAvatar.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  size: PropTypes.string.isRequired,\r\n};\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport { Grid, Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport Avatar from 'components/common/Avatar';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProfileHead = ({ children, avatar, nickname, edit }) => {\r\n  return (\r\n    <>\r\n      <Grid columns={2}>\r\n        <Grid.Row verticalAlign=\"middle\">\r\n          {/* 프로필 상단 왼쪽 */}\r\n          <s.Avatar>\r\n            <Avatar src={avatar} size=\"150px\" />\r\n          </s.Avatar>\r\n\r\n          {/* 프로필 상단 오른쪽 */}\r\n          <Grid.Column>\r\n            <h1>\r\n              {nickname}\r\n              {edit && (\r\n                <Link to=\"/profile/edit\">\r\n                  <s.Icon name=\"cog\" />\r\n                </Link>\r\n              )}\r\n            </h1>\r\n            {children}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Avatar = styled(Grid.Column)`\r\n  text-align: center;\r\n`;\r\ns.Icon = styled(Icon)`\r\n  padding-left: 20px;\r\n`;\r\n\r\nProfileHead.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  avatar: PropTypes.string,\r\n  nickname: PropTypes.string.isRequired,\r\n  edit: PropTypes.string,\r\n};\r\nexport default ProfileHead;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Input } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport AppLayout from 'components/layout/AppLayout';\r\nimport { editProfileRequest } from 'redux/user/userSlice';\r\nimport { useInput } from 'hooks/useInput';\r\nimport useUploadImages from 'hooks/useUploadImages';\r\nimport ProfileHead from 'components/profile/ProfileHead';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst EditProfile = () => {\r\n  const { currentUser, editProfileLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [images, onFileChange, imageInput, onImageUpload] = useUploadImages();\r\n  const [nickname, onChangeNickname] = useInput(currentUser.nickname);\r\n  const [desc, onChangeDesc] = useInput(currentUser.desc);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    let src = null;\r\n    if (images) src = images[0]?.src;\r\n    const userId = currentUser.id;\r\n    dispatch(editProfileRequest({ src, nickname, desc, userId }));\r\n    history.push('/profile');\r\n  }, [images, nickname, desc]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <s.article>\r\n        <ProfileHead\r\n          avatar={images ? images[0]?.src : currentUser.avatar}\r\n          nickname={nickname}\r\n        >\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            hidden\r\n            ref={imageInput}\r\n            onChange={onFileChange}\r\n          />\r\n          <div>\r\n            <p>{currentUser.email}</p>\r\n            <s.changeAvatar onClick={onImageUpload}>프로필 사진 바꾸기</s.changeAvatar>\r\n          </div>\r\n        </ProfileHead>\r\n        <s.Form onSubmit={onSubmit}>\r\n          <div>\r\n            <label htmlFor=\"nickname\">닉네임</label>\r\n            <Input\r\n              id=\"nickname\"\r\n              type=\"text\"\r\n              value={nickname}\r\n              onChange={onChangeNickname}\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"user-desc\">소개</label>\r\n            <Input\r\n              id=\"user-desc\"\r\n              type=\"text\"\r\n              value={desc}\r\n              onChange={onChangeDesc}\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <s.Button\r\n              type=\"submit\"\r\n              content=\"수정사항 저장하기\"\r\n              color=\"teal\"\r\n              loading={editProfileLoading}\r\n            />\r\n          </div>\r\n        </s.Form>\r\n      </s.article>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.article = styled.article`\r\n  padding: 10px;\r\n  max-width: 640px;\r\n  margin: 0 auto;\r\n`;\r\ns.changeAvatar = styled.a`\r\n  cursor: pointer;\r\n`;\r\ns.Form = styled(Form)`\r\n  margin-top: 20px;\r\n  padding: 0 60px;\r\n  & > div {\r\n    margin-bottom: 10px;\r\n    & label {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\ns.Button = styled(Button)`\r\n  width: 100%;\r\n`;\r\nexport default EditProfile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostCardContent = ({ nickname, content }) => {\r\n  return (\r\n    <s.content>\r\n      <span>{nickname}</span>\r\n      {content.split(/(#[^\\s#]+)/g).map((v, i) => {\r\n        if (v.match(/(#[^\\s#]+)/)) {\r\n          return (\r\n            <Link to={`/hashtag/${v.slice(1)}`} key={i}>\r\n              {v}\r\n            </Link>\r\n          );\r\n        }\r\n        return v;\r\n      })}\r\n    </s.content>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.content = styled.div`\r\n  margin: 0 10px 10px;\r\n  & span {\r\n    font-weight: bold;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\nPostCardContent.propTypes = {\r\n  nickname: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n};\r\nexport default PostCardContent;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Image, List } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport { removeCommentRequest } from 'redux/post/postSlice';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CommentList = ({ nickname, content, userId, commentId, postId }) => {\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const onRemove = useCallback(\r\n    () => dispatch(removeCommentRequest({ postId, commentId })),\r\n    [],\r\n  );\r\n  const getTime = () => {\r\n    const getToday = new Date();\r\n    const year = getToday.getFullYear();\r\n    const month = getToday.getMonth();\r\n    const date = getToday.getDate();\r\n    return `${year}년 ${month + 1}월 ${date}일`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List.Item>\r\n        <Image\r\n          src=\"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n          avatar\r\n        />\r\n        <List.Content>\r\n          <List.Header>\r\n            {nickname}\r\n            <s.date>{getTime()}</s.date>\r\n          </List.Header>\r\n          <p>{content}</p>\r\n        </List.Content>\r\n        {userId === currentUser.id && (\r\n          <s.remove floated=\"right\" onClick={onRemove}>\r\n            <List.Icon name=\"delete\" color=\"red\" />\r\n          </s.remove>\r\n        )}\r\n      </List.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.date = styled.span`\r\n  font-size: 0.9rem;\r\n  font-weight: lighter;\r\n  margin-left: 5px;\r\n  margin-bottom: 0;\r\n  color: #aaa;\r\n`;\r\ns.remove = styled(List.Content)`\r\n  cursor: pointer;\r\n`;\r\nCommentList.propTypes = {\r\n  nickname: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  userId: PropTypes.number.isRequired,\r\n  commentId: PropTypes.number.isRequired,\r\n  postId: PropTypes.number.isRequired,\r\n};\r\nexport default CommentList;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Form, Input, List } from 'semantic-ui-react';\r\nimport CommentList from 'components/posts/CommentList';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCommentRequest } from 'redux/post/postSlice';\r\nimport { useInput } from 'hooks/useInput';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Comment = ({ postId, comments, toggleComment, onToggleComment }) => {\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [newComment, setNewComment] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [text, onChangeText, setText] = useInput('');\r\n\r\n  // 덧글아이콘(at PostCard)을 눌렀을 때 덧글창이 열리거나 닫힘\r\n  useEffect(() => {\r\n    setOpen(toggleComment);\r\n    setNewComment(null);\r\n  }, [toggleComment]);\r\n\r\n  const onToggle = useCallback(() => {\r\n    // 덧글아이콘(at PostCard)을 눌렀을 때 덧글창이 열리거나 닫힘\r\n    onToggleComment(!open);\r\n    // 덧글 닫기/모두보기 클릭시 토글\r\n    setOpen((prev) => !prev);\r\n    setNewComment(null);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addCommentRequest({ postId, currentUser, text }));\r\n    setNewComment(text);\r\n    setText('');\r\n  }, [text]);\r\n\r\n  return (\r\n    <s.comment>\r\n      <p onClick={onToggle}>\r\n        {open ? '덧글 닫기' : `${comments?.length}개의 덧글 모두 보기`}\r\n      </p>\r\n      {open && (\r\n        <List>\r\n          {comments.map((v) => (\r\n            <CommentList\r\n              key={v.id}\r\n              postId={postId}\r\n              commentId={v.id}\r\n              userId={v.User.id}\r\n              nickname={v.User.nickname}\r\n              content={v.content}\r\n            />\r\n          ))}\r\n        </List>\r\n      )}\r\n      {newComment && !open && (\r\n        <List>\r\n          <CommentList\r\n            postId={postId}\r\n            commentId={comments.length + 1}\r\n            userId={currentUser.id}\r\n            nickname={currentUser.nickname}\r\n            content={newComment}\r\n          />\r\n        </List>\r\n      )}\r\n      <Form onSubmit={onSubmit}>\r\n        <Input\r\n          transparent\r\n          placeholder=\"덧글을 입력하세요.\"\r\n          value={text}\r\n          onChange={onChangeText}\r\n        />\r\n      </Form>\r\n    </s.comment>\r\n  );\r\n};\r\nconst s = {};\r\ns.comment = styled.div`\r\n  padding: 0 10px;\r\n  & > p {\r\n    margin: 0;\r\n    color: gray;\r\n    cursor: pointer;\r\n    font-size: 0.95rem;\r\n  }\r\n  & > .list {\r\n    margin-top: 10px;\r\n  }\r\n  & .item {\r\n    margin-bottom: 5px;\r\n  }\r\n  & form {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\nComment.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      User: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        nickname: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    }),\r\n  ).isRequired,\r\n  toggleComment: PropTypes.bool.isRequired,\r\n  onToggleComment: PropTypes.func.isRequired,\r\n};\r\nexport default Comment;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { List, Loader } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport DropDownMenu from 'components/common/DropDownMenu';\r\nimport { updatePost, removePostRequest } from 'redux/post/postSlice';\r\nimport { addFollowRequest, removeFollowRequest } from 'redux/user/userSlice';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostMenu = ({ userId, postId, nickname }) => {\r\n  const {\r\n    addFollowLoading,\r\n    removeFollowLoading,\r\n    currentUser: { id, Followings },\r\n  } = useSelector((state) => state.user);\r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const [follow, setFollow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const isFollowed = Followings.find((v) => v.id === userId);\r\n    isFollowed && setFollow(true);\r\n  }, [follow]);\r\n\r\n  const onUpdate = useCallback(() => {\r\n    dispatch(updatePost(postId));\r\n  }, []);\r\n\r\n  const onRemove = useCallback(() => {\r\n    dispatch(removePostRequest(postId));\r\n  }, []);\r\n\r\n  const onToggleFollow = useCallback(() => {\r\n    dispatch(\r\n      follow ? removeFollowRequest(userId) : addFollowRequest({ userId, nickname }),\r\n    );\r\n    setFollow((prev) => !prev);\r\n  }, [follow]);\r\n\r\n  return (\r\n    <DropDownMenu top=\"30px\">\r\n      {userId === id ? (\r\n        <>\r\n          <Link to=\"/post/update\">\r\n            <List.Item onClick={onUpdate}>수정</List.Item>\r\n          </Link>\r\n          <List.Item onClick={onRemove}>\r\n            {removePostLoading ? <Loader active inline=\"centered\" /> : '삭제'}\r\n          </List.Item>\r\n        </>\r\n      ) : (\r\n        <List.Item>\r\n          <List.Item onClick={onToggleFollow}>\r\n            {addFollowLoading || removeFollowLoading ? (\r\n              <Loader active inline=\"centered\" />\r\n            ) : follow ? (\r\n              '언팔로우'\r\n            ) : (\r\n              '팔로우'\r\n            )}\r\n          </List.Item>\r\n        </List.Item>\r\n      )}\r\n    </DropDownMenu>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.div = styled.div`\r\n  text-align: center;\r\n  & i {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nPostMenu.propTypes = {\r\n  userId: PropTypes.number.isRequired,\r\n  postId: PropTypes.number.isRequired,\r\n  nickname: PropTypes.string.isRequired,\r\n};\r\nexport default PostMenu;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid, Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport { addFollowRequest } from 'redux/user/userSlice';\r\nimport Avatar from 'components/common/Avatar';\r\nimport PostMenu from 'components/posts/PostMenu';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PostCardHead = ({ userId, nickname, avatar, postId }) => {\r\n  const { id, Followings } = useSelector((state) => state.user.currentUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const onFollow = useCallback(\r\n    () => dispatch(addFollowRequest({ userId, nickname })),\r\n    [],\r\n  );\r\n  const onToggleMenu = useCallback(() => {\r\n    setOpenMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  const style = useMemo(() => ({ margin: '0' }), []);\r\n  return (\r\n    <s.Grid style={style}>\r\n      <Grid.Row verticalAlign=\"middle\">\r\n        <Grid.Column width={10}>\r\n          <Avatar\r\n            src={\r\n              avatar\r\n                ? avatar\r\n                : 'https://react.semantic-ui.com/images/wireframe/square-image.png'\r\n            }\r\n            size=\"31px\"\r\n          />\r\n          <span>\r\n            <b>{nickname}</b>\r\n            {userId === id ||\r\n              (!Followings.find((v) => v.id === userId) && (\r\n                <a onClick={onFollow}>팔로우하기</a>\r\n              ))}\r\n          </span>\r\n        </Grid.Column>\r\n        <Grid.Column floated=\"right\" width={2}>\r\n          <Icon name=\"ellipsis vertical\" onClick={onToggleMenu} />\r\n          {openMenu && <PostMenu userId={userId} postId={postId} nickname={nickname} />}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </s.Grid>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Grid = styled(Grid)`\r\n  width: 100%;\r\n  & span {\r\n    position: relative;\r\n    top: -8px;\r\n    left: 10px;\r\n    & a {\r\n      cursor: pointer;\r\n      margin-left: 5px;\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n  & i {\r\n    float: right;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nPostCardHead.propTypes = {\r\n  userId: PropTypes.number.isRequired,\r\n  nickname: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  postId: PropTypes.number.isRequired,\r\n};\r\nexport default PostCardHead;\r\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Slider = ({ Images }) => {\r\n  const LEN = Images.length;\r\n  const [currentSlider, setCurrentSlider] = useState(1);\r\n  const slideRef = useRef();\r\n\r\n  const prevSlide = useCallback(\r\n    () => (currentSlider === 1 ? null : setCurrentSlider((prev) => prev - 1)),\r\n    [currentSlider],\r\n  );\r\n  const nextSlide = useCallback(() => {\r\n    currentSlider >= LEN ? null : setCurrentSlider((prev) => prev + 1);\r\n  }, [currentSlider]);\r\n\r\n  useEffect(() => {\r\n    const moveSliderSize = ((currentSlider - 1) * 100) / LEN;\r\n    slideRef.current.style.transition = 'all 0.5s ease-in-out';\r\n    slideRef.current.style.transform = `translateX(-${moveSliderSize}%)`;\r\n    slideRef.current.style.width = `${LEN * 100}%`;\r\n  }, [currentSlider]);\r\n\r\n  const dotStyle = useMemo(() => ({ background: '#999' }), []);\r\n  return (\r\n    <s.container>\r\n      {currentSlider !== 1 && (\r\n        <Icon\r\n          className=\"prevPointer\"\r\n          name=\"arrow alternate circle left outline\"\r\n          onClick={prevSlide}\r\n        />\r\n      )}\r\n      {currentSlider !== LEN && (\r\n        <Icon\r\n          className=\"nextPointer\"\r\n          name=\"arrow alternate circle right outline\"\r\n          onClick={nextSlide}\r\n        />\r\n      )}\r\n      <s.slider ref={slideRef}>\r\n        {Images.map((v, i) => (\r\n          <div key={i}>\r\n            <img src={v.src} alt={v.src} />\r\n          </div>\r\n        ))}\r\n      </s.slider>\r\n      {LEN > 1 && (\r\n        <s.dots>\r\n          {Images.map((v, i) => (\r\n            <span key={i} style={i + 1 === currentSlider ? dotStyle : null} />\r\n          ))}\r\n        </s.dots>\r\n      )}\r\n    </s.container>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.container = styled.div`\r\n  width: 100%;\r\n  max-height: 640px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  overflow: hidden;\r\n  & i {\r\n    padding: 50px 0;\r\n    position: absolute;\r\n    top: calc(50% - 58px);\r\n    z-index: 490;\r\n    margin: 0 0.25rem;\r\n    cursor: pointer;\r\n  }\r\n  & i.prevPointer {\r\n    left: 0;\r\n  }\r\n  & i.nextPointer {\r\n    right: 0;\r\n  }\r\n`;\r\ns.slider = styled.div`\r\n  display: flex;\r\n  & div {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    & img {\r\n      max-width: 100%;\r\n      max-height: 640px;\r\n    }\r\n  }\r\n`;\r\ns.dots = styled.div`\r\n  text-align: center;\r\n  & span {\r\n    display: inline-block;\r\n    padding: 4px;\r\n    border-radius: 50%;\r\n    background: #eee;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nSlider.propTypes = {\r\n  Images: PropTypes.array.isRequired,\r\n};\r\nexport default Slider;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Confirm, List } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addFollowRequest, removeFollowRequest } from 'redux/user/userSlice';\r\n\r\nconst UserList = ({ nickname, userId }) => {\r\n  const {\r\n    currentUser: { Followings },\r\n  } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const [oepnConfirm, setOpenConfirm] = useState(false);\r\n  const onConfirm = useCallback(() => setOpenConfirm(true), []);\r\n  const onFollow = useCallback(\r\n    () => dispatch(addFollowRequest({ userId, nickname })),\r\n    [],\r\n  );\r\n  const onUnfollow = useCallback(() => dispatch(removeFollowRequest(userId)), []);\r\n  const style = useMemo(() => ({ padding: '4px 8px' }));\r\n  return (\r\n    <>\r\n      <List.Item>\r\n        <List.Content verticalAlign=\"middle\">\r\n          <s.ListHeader>{nickname}</s.ListHeader>\r\n          {Followings.find((v) => v.id === userId) ? (\r\n            <Button\r\n              color=\"teal\"\r\n              floated=\"right\"\r\n              size=\"tiny\"\r\n              style={style}\r\n              onClick={onConfirm}\r\n            >\r\n              팔로잉\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              basic\r\n              color=\"teal\"\r\n              floated=\"right\"\r\n              size=\"tiny\"\r\n              style={style}\r\n              onClick={onFollow}\r\n            >\r\n              팔로우하기\r\n            </Button>\r\n          )}\r\n          <Confirm\r\n            open={oepnConfirm}\r\n            content=\"팔로우를 취소 하시겠습니까?\"\r\n            onCancel={() => setOpenConfirm(false)}\r\n            onConfirm={() => {\r\n              onUnfollow();\r\n              setOpenConfirm(false);\r\n            }}\r\n          />\r\n        </List.Content>\r\n      </List.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.ListHeader = styled(List.Header)`\r\n  float: left;\r\n`;\r\nUserList.propTypes = {\r\n  nickname: PropTypes.string.isRequired,\r\n  userId: PropTypes.number.isRequired,\r\n};\r\nexport default UserList;\r\n","import React, { useMemo, useState } from 'react';\r\nimport { List, Modal } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport UserList from 'components/common/UserList';\r\n\r\nconst ListModal = ({ list, title }) => {\r\n  const [oepnList, setOpenList] = useState(false);\r\n\r\n  const style = useMemo(() => ({ width: '300px' }), []);\r\n  return (\r\n    <s.Modal\r\n      style={style}\r\n      onClose={() => setOpenList(false)}\r\n      onOpen={() => setOpenList(true)}\r\n      open={oepnList}\r\n      trigger={\r\n        <p>\r\n          {title} <span>{list.length}</span>\r\n        </p>\r\n      }\r\n    >\r\n      <h3>{title}</h3>\r\n      {list && (\r\n        <List selection verticalAlign=\"middle\">\r\n          {list.map((v, i) => (\r\n            <UserList key={i} nickname={v.nickname} userId={v.id} />\r\n          ))}\r\n        </List>\r\n      )}\r\n    </s.Modal>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Modal = styled(Modal)`\r\n  padding: 5px 0;\r\n  max-height: 80vh;\r\n  overflow-y: scroll;\r\n  & h3 {\r\n    margin-left: 10px;\r\n    padding-top: 5px;\r\n  }\r\n`;\r\n\r\nListModal.propTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      nickname: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string,\r\n    }),\r\n  ),\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default ListModal;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport PostCardContent from 'components/posts/PostCardContent';\r\nimport Comment from 'components/posts/Comment';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addLikerRequest, removeLikerRequest } from 'redux/post/postSlice';\r\nimport PostCardHead from 'components/posts/PostCardHead';\r\nimport Slider from './Slider';\r\nimport ListModal from 'components/common/ListModal';\r\n\r\nconst PostCard = ({ user, content, Images, comments, postId, Likers }) => {\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const [toggleComment, setToggleComment] = useState(false);\r\n  const [hearted, setHearted] = useState(Likers.find((v) => v.id === currentUser.id));\r\n\r\n  const onToggleHeart = useCallback(() => {\r\n    dispatch(\r\n      hearted\r\n        ? removeLikerRequest({ postId, currentUser })\r\n        : addLikerRequest({ postId, currentUser }),\r\n    );\r\n    setHearted((prev) => !prev);\r\n  }, [hearted]);\r\n\r\n  return (\r\n    <s.card>\r\n      {/* 포스트 헤더 */}\r\n      <PostCardHead\r\n        userId={user.id}\r\n        nickname={user.nickname}\r\n        avatar={user.avatar}\r\n        postId={postId}\r\n      />\r\n\r\n      {/* 포스트 이미지 */}\r\n      <Slider Images={Images} />\r\n\r\n      {/* 좋아요, 덧글 아이콘 및 좋아요 수 */}\r\n      <s.btn>\r\n        <Icon\r\n          name={hearted ? 'heart' : 'heart outline'}\r\n          size=\"large\"\r\n          color={hearted ? 'red' : 'black'}\r\n          onClick={onToggleHeart}\r\n        />\r\n        <Icon\r\n          name=\"comment outline\"\r\n          size=\"large\"\r\n          onClick={() => setToggleComment((prev) => !prev)}\r\n        />\r\n        <ListModal title=\"좋아요\" list={Likers} />\r\n      </s.btn>\r\n\r\n      {/* 포스트 내용 */}\r\n      <PostCardContent nickname={user.nickname} content={content} />\r\n\r\n      {/* 덧글 */}\r\n      <Comment\r\n        postId={postId}\r\n        comments={comments}\r\n        toggleComment={toggleComment}\r\n        onToggleComment={(bool) => setToggleComment(bool)}\r\n      />\r\n    </s.card>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.card = styled.article`\r\n  max-width: 640px;\r\n  border: 1px solid #eee;\r\n  margin: 0 auto 20px;\r\n  padding: 0 0 10px;\r\n`;\r\ns.btn = styled.div`\r\n  margin: 10px;\r\n  & i {\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n  & p {\r\n    margin-top: 5px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nPostCard.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    nickname: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n  }).isRequired,\r\n  postId: PropTypes.number.isRequired,\r\n  Images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      src: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  Likers: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      nickname: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string,\r\n    }),\r\n  ),\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      User: PropTypes.shape({\r\n        nickname: PropTypes.string.isRequired,\r\n        avatar: PropTypes.string,\r\n      }).isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default PostCard;\r\n","import PostCard from 'components/posts/postCard';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AppLayout from 'components/layout/AppLayout';\r\n\r\nconst Home = () => {\r\n  const { mainPosts } = useSelector((state) => state.post);\r\n\r\n  return (\r\n    <>\r\n      <AppLayout>\r\n        {mainPosts.map((v) => (\r\n          <PostCard\r\n            key={v.id}\r\n            user={v.User}\r\n            content={v.content}\r\n            Images={v.Images}\r\n            comments={v.Comments}\r\n            postId={v.id}\r\n            Likers={v.Likers}\r\n          />\r\n        ))}\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Icon, TextArea } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport AppLayout from 'components/layout/AppLayout';\r\nimport { addPostRequest, updatePostRequest } from 'redux/post/postSlice';\r\nimport { useInput } from 'hooks/useInput';\r\nimport useUploadImages from 'hooks/useUploadImages';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Slider from './Slider';\r\n\r\nconst PostForm = ({ post }) => {\r\n  const { addPostLoading, addPostDone } = useSelector((state) => state.post);\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [images, onFileChange, imageInput, onImageUpload] = useUploadImages(post?.Images);\r\n  const [text, onChangeText, setText] = useInput(post?.content ? post.content : '');\r\n\r\n  useEffect(() => {\r\n    addPostDone && setText('');\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    post\r\n      ? dispatch(updatePostRequest({ images, text, postId: post.id }))\r\n      : dispatch(addPostRequest({ images, text, currentUser }));\r\n    history.push('/');\r\n  }, [text]);\r\n\r\n  return (\r\n    <>\r\n      <AppLayout>\r\n        <s.div>\r\n          <Form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              hidden\r\n              ref={imageInput}\r\n              onChange={onFileChange}\r\n            />\r\n            <s.imageUpload>\r\n              {images ? (\r\n                <>\r\n                  <p className=\"changeImg\" onClick={onImageUpload}>\r\n                    사진 바꾸기\r\n                  </p>\r\n                  <Slider Images={images} />\r\n                </>\r\n              ) : (\r\n                <div className=\"addImg\" onClick={onImageUpload}>\r\n                  <Icon name=\"plus\" size=\"huge\" />\r\n                  <p>사진을 추가하세요.</p>\r\n                </div>\r\n              )}\r\n            </s.imageUpload>\r\n            <TextArea\r\n              rows=\"5\"\r\n              value={text}\r\n              placeholder=\"포스트 작성\"\r\n              onChange={onChangeText}\r\n            />\r\n            <s.Button\r\n              color=\"teal\"\r\n              type=\"submit\"\r\n              content=\"작성하기\"\r\n              loading={addPostLoading}\r\n            />\r\n          </Form>\r\n        </s.div>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.div = styled.div`\r\n  max-width: 640px;\r\n  margin: 0 auto;\r\n`;\r\ns.imageUpload = styled.div`\r\n  width: 100%;\r\n  border: 1px solid #eee;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  & p.changeImg {\r\n    cursor: pointer;\r\n    text-align: right;\r\n    padding-right: 5px;\r\n    font-size: 0.95rem;\r\n  }\r\n  & img {\r\n    width: 100%;\r\n  }\r\n  & div.addImg {\r\n    color: #999;\r\n    padding: 40px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\ns.Button = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nPostForm.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    User: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      nickname: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string,\r\n    }).isRequired,\r\n    Images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        src: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    content: PropTypes.string.isRequired,\r\n  }),\r\n};\r\nexport default PostForm;\r\n","import React from 'react';\r\nimport PostForm from 'components/posts/PostForm';\r\n\r\nconst CreatePost = () => <PostForm />;\r\n\r\nexport default CreatePost;\r\n","import React from 'react';\r\nimport PostForm from 'components/posts/PostForm';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst UpdatePost = () => {\r\n  const { singlePost } = useSelector((state) => state.post);\r\n\r\n  return <PostForm post={singlePost} />;\r\n};\r\n\r\nexport default UpdatePost;\r\n","import React, { useMemo } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PostImg = ({ src, commentsLen, postId }) => {\r\n  const { mainPosts } = useSelector((state) => state.post);\r\n  const style = useMemo(\r\n    () => ({\r\n      background: `url(${src})`,\r\n      backgroundPosition: 'center',\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n    }),\r\n    [],\r\n  );\r\n  return (\r\n    <s.img style={style}>\r\n      <s.container>\r\n        <div>\r\n          <div>\r\n            <span>\r\n              <Icon name=\"heart outline\" />\r\n              {mainPosts.find((v) => v.id === postId).Likers.length}\r\n            </span>\r\n            <span>\r\n              <Icon name=\"comment outline\" />\r\n              {commentsLen}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </s.container>\r\n    </s.img>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.img = styled.div`\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: calc(100vw / 3 - 32px);\r\n  max-height: calc(800px / 3 - 32px);\r\n  text-align: center;\r\n  & :hover {\r\n    & div {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\ns.container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  & > div {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #00000033;\r\n    opacity: 0;\r\n    & > div {\r\n      position: relative;\r\n      top: 50%;\r\n      transform: translate(0, -50%);\r\n      color: #fff;\r\n      opacity: 0;\r\n      & span:first-child {\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\nPostImg.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  commentsLen: PropTypes.number.isRequired,\r\n};\r\nexport default PostImg;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, List } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport AppLayout from 'components/layout/AppLayout';\r\nimport PostImg from 'components/profile/PostImg';\r\nimport ProfileHead from 'components/profile/ProfileHead';\r\nimport ListModal from 'components/common/ListModal';\r\n\r\nconst Profile = () => {\r\n  const { nickname, Posts, Followers, Followings, desc, avatar } = useSelector(\r\n    (state) => state.user.currentUser,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppLayout>\r\n        <s.profile>\r\n          <ProfileHead avatar={avatar} nickname={nickname} edit=\"수정하기\">\r\n            {/* 프로필 상단 오른쪽 */}\r\n            <s.List horizontal>\r\n              <List.Item>\r\n                게시글 <span>{Posts.length}</span>\r\n              </List.Item>\r\n              <List.Item>\r\n                <ListModal list={Followers} title=\"팔로워\" />\r\n              </List.Item>\r\n              <List.Item>\r\n                <ListModal list={Followings} title=\"팔로우\" />\r\n              </List.Item>\r\n            </s.List>\r\n            <p>{desc}</p>\r\n          </ProfileHead>\r\n\r\n          {/* 내가 쓴 게시글 보기 */}\r\n          <s.article>\r\n            <Grid columns={3}>\r\n              <Grid.Row>\r\n                {Posts.map((v, i) => (\r\n                  <Grid.Column key={i}>\r\n                    <PostImg\r\n                      src={v.Images[0].src}\r\n                      commentsLen={v.Comments.length}\r\n                      postId={v.id}\r\n                    />\r\n                  </Grid.Column>\r\n                ))}\r\n              </Grid.Row>\r\n            </Grid>\r\n          </s.article>\r\n        </s.profile>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\nconst s = {};\r\ns.profile = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\ns.List = styled(List)`\r\n  & .item {\r\n    cursor: pointer;\r\n  }\r\n  & .item:first-child {\r\n    cursor: auto;\r\n  }\r\n  & span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\ns.article = styled.article`\r\n  min-height: calc(100vh - 74px - 190px - 65px);\r\n  margin-top: 20px;\r\n`;\r\nexport default Profile;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Input } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport AuthCard from 'components/auth/AuthCard';\r\nimport AuthLinkCard from 'components/auth/AuthLinkCard';\r\nimport { dummyUser, signUpRequest } from 'redux/user/userSlice';\r\nimport { useInput } from 'hooks/useInput';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst SignUp = () => {\r\n  const { currentUser, signUpLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [passwordCheck, onChangePasswordCheck] = useInput('');\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [term, setTerm] = useState(false);\r\n  const [termError, setTermError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    currentUser && history.push('/');\r\n  }, [currentUser]);\r\n\r\n  const onChangeTerm = useCallback((e) => {\r\n    setTerm(e.target.checked);\r\n    setTermError(false);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    const exUser = dummyUser.find((v) => v.email === email);\r\n    if (exUser) {\r\n      return setEmailError(true);\r\n    } else {\r\n      setEmailError(false);\r\n    }\r\n    if (password !== passwordCheck) {\r\n      return setPasswordError(true);\r\n    } else {\r\n      setPasswordError(false);\r\n    }\r\n    if (!term) {\r\n      return setTermError(true);\r\n    } else {\r\n      setTermError(false);\r\n    }\r\n    dispatch(signUpRequest({ email, nickname, password }));\r\n  }, [email, password, passwordCheck, term]);\r\n\r\n  return (\r\n    <>\r\n      <AuthCard content=\"가입하기\">\r\n        <h4>이메일로 가입하기</h4>\r\n        <Form onSubmit={onSubmit}>\r\n          <Input type=\"email\" placeholder={'이메일'} onChange={onChangeEmail} autoFocus />\r\n          {emailError && <s.Error>이미 사용중인 이메일입니다.</s.Error>}\r\n          <Input\r\n            type=\"text\"\r\n            placeholder={'사용자이름'}\r\n            onChange={onChangeNickname}\r\n            size=\"small\"\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder={'비밀번호'}\r\n            onChange={onChangePassword}\r\n            error={passwordError}\r\n            size=\"small\"\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder={'비밀번호 확인'}\r\n            onChange={onChangePasswordCheck}\r\n            error={passwordError}\r\n            size=\"small\"\r\n          />\r\n          {passwordError && <s.Error>비밀번호가 일치하지 않습니다.</s.Error>}\r\n          <s.agree>\r\n            <input type=\"checkbox\" onChange={onChangeTerm} /> <a>약관</a>에 동의하십니까?\r\n            {termError && <s.Error>약관에 동의하지 않으셨습니다.</s.Error>}\r\n          </s.agree>\r\n          <div>\r\n            <s.Button\r\n              size=\"small\"\r\n              type=\"submit\"\r\n              content=\"가입하기\"\r\n              color=\"teal\"\r\n              loading={signUpLoading}\r\n            />\r\n          </div>\r\n        </Form>\r\n      </AuthCard>\r\n      <AuthLinkCard query=\"계정이 있으신가요?\">\r\n        <Link to=\"/auth\">로그인하기</Link>\r\n      </AuthLinkCard>\r\n    </>\r\n  );\r\n};\r\n\r\nconst s = {};\r\ns.Error = styled.span`\r\n  color: red;\r\n`;\r\ns.agree = styled.div`\r\n  text-align: left;\r\n  font-size: 0.9rem;\r\n  & input {\r\n    margin: 3px 3px 0 5px;\r\n  }\r\n`;\r\ns.Button = styled(Button)`\r\n  width: 100%;\r\n`;\r\nexport default SignUp;\r\n","import Auth from 'pages/Auth';\r\nimport EditProfile from 'pages/EditProfile';\r\nimport Home from 'pages/Home';\r\nimport CreatePost from 'pages/CreatePost';\r\nimport UpdatePost from 'pages/UpdatePost';\r\nimport Profile from 'pages/Profile';\r\nimport SignUp from 'pages/SignUp';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { HashRouter as Router, Redirect, Route } from 'react-router-dom';\r\n\r\nfunction RouterApp() {\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  return (\r\n    <>\r\n      <Router>\r\n        {currentUser ? (\r\n          <>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/profile/edit\" component={EditProfile} />\r\n            <Route path=\"/post/create\" component={CreatePost} />\r\n            <Route path=\"/post/update\" component={UpdatePost} />\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route path=\"/auth\" component={Auth} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Redirect from=\"*\" to=\"/auth\" />\r\n          </>\r\n        )}\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RouterApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from 'redux/configureStore';\nimport RouterApp from 'components/Router';\n\nReactDOM.render(\n  <Provider store={store}>\n    <RouterApp />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}